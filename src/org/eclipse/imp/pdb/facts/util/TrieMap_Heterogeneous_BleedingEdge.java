/*******************************************************************************
 * Copyright (c) 2013-2015 CWI
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *
 *   * Michael Steindorfer - Michael.Steindorfer@cwi.nl - CWI  
 *******************************************************************************/
package org.eclipse.imp.pdb.facts.util;

import static org.eclipse.imp.pdb.facts.util.AbstractSpecialisedImmutableMap.entryOf;

import java.lang.reflect.Field;
import java.text.DecimalFormat;
import java.util.AbstractCollection;
import java.util.AbstractSet;
import java.util.ArrayDeque;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.Deque;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import java.util.concurrent.atomic.AtomicReference;
import java.util.stream.Stream;

@SuppressWarnings("rawtypes")
public class TrieMap_Heterogeneous_BleedingEdge<K, V> implements ImmutableMap<K, V> {

	@SuppressWarnings("unchecked")
	private static final TrieMap_Heterogeneous_BleedingEdge EMPTY_MAP = new TrieMap_Heterogeneous_BleedingEdge(
					CompactMapNode.EMPTY_NODE, 0, 0);

	private static final boolean DEBUG = false;

	private final AbstractMapNode<K, V> rootNode;
	private final int hashCode;
	private final int cachedSize;

	TrieMap_Heterogeneous_BleedingEdge(AbstractMapNode<K, V> rootNode, int hashCode,
					int cachedSize) {
		this.rootNode = rootNode;
		this.hashCode = hashCode;
		this.cachedSize = cachedSize;
		if (DEBUG) {
			assert checkHashCodeAndSize(hashCode, cachedSize);
		}
	}

	@SuppressWarnings("unchecked")
	public static final <K, V> ImmutableMap<K, V> of() {
		return TrieMap_Heterogeneous_BleedingEdge.EMPTY_MAP;
	}

	@SuppressWarnings("unchecked")
	public static final <K, V> ImmutableMap<K, V> of(Object... keyValuePairs) {
		if (keyValuePairs.length % 2 != 0) {
			throw new IllegalArgumentException(
							"Length of argument list is uneven: no key/value pairs.");
		}

		ImmutableMap<K, V> result = TrieMap_Heterogeneous_BleedingEdge.EMPTY_MAP;

		for (int i = 0; i < keyValuePairs.length; i += 2) {
			final K key = (K) keyValuePairs[i];
			final V val = (V) keyValuePairs[i + 1];

			result = result.__put(key, val);
		}

		return result;
	}

	@SuppressWarnings("unchecked")
	public static final <K, V> TransientMap<K, V> transientOf() {
		return TrieMap_Heterogeneous_BleedingEdge.EMPTY_MAP.asTransient();
	}

	@SuppressWarnings("unchecked")
	public static final <K, V> TransientMap<K, V> transientOf(Object... keyValuePairs) {
		if (keyValuePairs.length % 2 != 0) {
			throw new IllegalArgumentException(
							"Length of argument list is uneven: no key/value pairs.");
		}

		final TransientMap<K, V> result = TrieMap_Heterogeneous_BleedingEdge.EMPTY_MAP
						.asTransient();

		for (int i = 0; i < keyValuePairs.length; i += 2) {
			final K key = (K) keyValuePairs[i];
			final V val = (V) keyValuePairs[i + 1];

			result.__put(key, val);
		}

		return result;
	}

	private boolean checkHashCodeAndSize(final int targetHash, final int targetSize) {
		int hash = 0;
		int size = 0;

		for (Iterator<Map.Entry<K, V>> it = entryIterator(); it.hasNext();) {
			final Map.Entry<K, V> entry = it.next();
			final K key = entry.getKey();
			final V val = entry.getValue();

			hash += key.hashCode() ^ val.hashCode();
			size += 1;
		}

		return hash == targetHash && size == targetSize;
	}

	public static final int transformHashCode(final int hash) {
		return hash;
	}

	public boolean containsKey(final Object o) {
		try {
			@SuppressWarnings("unchecked")
			final K key = (K) o;
			return rootNode.containsKey(key, transformHashCode(key.hashCode()), 0);
		} catch (ClassCastException unused) {
			return false;
		}
	}

	public boolean containsKeyEquivalent(final Object o, final Comparator<Object> cmp) {
		try {
			@SuppressWarnings("unchecked")
			final K key = (K) o;
			return rootNode.containsKey(key, transformHashCode(key.hashCode()), 0, cmp);
		} catch (ClassCastException unused) {
			return false;
		}
	}

	public boolean containsValue(final Object o) {
		for (Iterator<V> iterator = valueIterator(); iterator.hasNext();) {
			if (iterator.next().equals(o)) {
				return true;
			}
		}
		return false;
	}

	public boolean containsValueEquivalent(final Object o, final Comparator<Object> cmp) {
		for (Iterator<V> iterator = valueIterator(); iterator.hasNext();) {
			if (cmp.compare(iterator.next(), o) == 0) {
				return true;
			}
		}
		return false;
	}

	public V get(final Object o) {
		try {
			@SuppressWarnings("unchecked")
			final K key = (K) o;
			final Optional<V> result = rootNode.findByKey(key, transformHashCode(key.hashCode()),
							0);

			if (result.isPresent()) {
				return result.get();
			} else {
				return null;
			}
		} catch (ClassCastException unused) {
			return null;
		}
	}

	public V getEquivalent(final Object o, final Comparator<Object> cmp) {
		try {
			@SuppressWarnings("unchecked")
			final K key = (K) o;
			final Optional<V> result = rootNode.findByKey(key, transformHashCode(key.hashCode()), 0,
							cmp);

			if (result.isPresent()) {
				return result.get();
			} else {
				return null;
			}
		} catch (ClassCastException unused) {
			return null;
		}
	}

	public ImmutableMap<K, V> __put(final K key, final V val) {
		final int keyHash = key.hashCode();
		final MapResult<K, V> details = MapResult.unchanged();

		final CompactMapNode<K, V> newRootNode = rootNode.updated(null, key, val,
						transformHashCode(keyHash), 0, details);

		if (details.isModified()) {
			if (details.hasReplacedValue()) {
				final int valHashOld = details.getReplacedValue().hashCode();
				final int valHashNew = val.hashCode();

				return new TrieMap_Heterogeneous_BleedingEdge<K, V>(newRootNode,
								hashCode + ((keyHash ^ valHashNew)) - ((keyHash ^ valHashOld)),
								cachedSize);
			}

			final int valHash = val.hashCode();
			return new TrieMap_Heterogeneous_BleedingEdge<K, V>(newRootNode,
							hashCode + ((keyHash ^ valHash)), cachedSize + 1);
		}

		return this;
	}

	public ImmutableMap<K, V> __putEquivalent(final K key, final V val,
					final Comparator<Object> cmp) {
		final int keyHash = key.hashCode();
		final MapResult<K, V> details = MapResult.unchanged();

		final CompactMapNode<K, V> newRootNode = rootNode.updated(null, key, val,
						transformHashCode(keyHash), 0, details, cmp);

		if (details.isModified()) {
			if (details.hasReplacedValue()) {
				final int valHashOld = details.getReplacedValue().hashCode();
				final int valHashNew = val.hashCode();

				return new TrieMap_Heterogeneous_BleedingEdge<K, V>(newRootNode,
								hashCode + ((keyHash ^ valHashNew)) - ((keyHash ^ valHashOld)),
								cachedSize);
			}

			final int valHash = val.hashCode();
			return new TrieMap_Heterogeneous_BleedingEdge<K, V>(newRootNode,
							hashCode + ((keyHash ^ valHash)), cachedSize + 1);
		}

		return this;
	}

	public ImmutableMap<K, V> __putAll(final Map<? extends K, ? extends V> map) {
		final TransientMap<K, V> tmpTransient = this.asTransient();
		tmpTransient.__putAll(map);
		return tmpTransient.freeze();
	}

	public ImmutableMap<K, V> __putAllEquivalent(final Map<? extends K, ? extends V> map,
					final Comparator<Object> cmp) {
		final TransientMap<K, V> tmpTransient = this.asTransient();
		tmpTransient.__putAllEquivalent(map, cmp);
		return tmpTransient.freeze();
	}

	public ImmutableMap<K, V> __remove(final K key) {
		final int keyHash = key.hashCode();
		final MapResult<K, V> details = MapResult.unchanged();

		final CompactMapNode<K, V> newRootNode = rootNode.removed(null, key,
						transformHashCode(keyHash), 0, details);

		if (details.isModified()) {
			assert details.hasReplacedValue();
			final int valHash = details.getReplacedValue().hashCode();
			return new TrieMap_Heterogeneous_BleedingEdge<K, V>(newRootNode,
							hashCode - ((keyHash ^ valHash)), cachedSize - 1);
		}

		return this;
	}

	public ImmutableMap<K, V> __removeEquivalent(final K key, final Comparator<Object> cmp) {
		final int keyHash = key.hashCode();
		final MapResult<K, V> details = MapResult.unchanged();

		final CompactMapNode<K, V> newRootNode = rootNode.removed(null, key,
						transformHashCode(keyHash), 0, details, cmp);

		if (details.isModified()) {
			assert details.hasReplacedValue();
			final int valHash = details.getReplacedValue().hashCode();
			return new TrieMap_Heterogeneous_BleedingEdge<K, V>(newRootNode,
							hashCode - ((keyHash ^ valHash)), cachedSize - 1);
		}

		return this;
	}

	public V put(final K key, final V val) {
		throw new UnsupportedOperationException();
	}

	public void putAll(final Map<? extends K, ? extends V> m) {
		throw new UnsupportedOperationException();
	}

	public void clear() {
		throw new UnsupportedOperationException();
	}

	public V remove(final Object key) {
		throw new UnsupportedOperationException();
	}

	public int size() {
		return cachedSize;
	}

	public boolean isEmpty() {
		return cachedSize == 0;
	}

	public Iterator<K> keyIterator() {
		return new MapKeyIterator<>(rootNode);
	}

	public Iterator<V> valueIterator() {
		return new MapValueIterator<>(rootNode);
	}

	public Iterator<Map.Entry<K, V>> entryIterator() {
		return new MapEntryIterator<>(rootNode);
	}

	@Override
	public Set<K> keySet() {
		Set<K> keySet = null;

		if (keySet == null) {
			keySet = new AbstractSet<K>() {
				@Override
				public Iterator<K> iterator() {
					return TrieMap_Heterogeneous_BleedingEdge.this.keyIterator();
				}

				@Override
				public int size() {
					return TrieMap_Heterogeneous_BleedingEdge.this.size();
				}

				@Override
				public boolean isEmpty() {
					return TrieMap_Heterogeneous_BleedingEdge.this.isEmpty();
				}

				@Override
				public void clear() {
					TrieMap_Heterogeneous_BleedingEdge.this.clear();
				}

				@Override
				public boolean contains(Object k) {
					return TrieMap_Heterogeneous_BleedingEdge.this.containsKey(k);
				}
			};
		}

		return keySet;
	}

	@Override
	public Collection<V> values() {
		Collection<V> values = null;

		if (values == null) {
			values = new AbstractCollection<V>() {
				@Override
				public Iterator<V> iterator() {
					return TrieMap_Heterogeneous_BleedingEdge.this.valueIterator();
				}

				@Override
				public int size() {
					return TrieMap_Heterogeneous_BleedingEdge.this.size();
				}

				@Override
				public boolean isEmpty() {
					return TrieMap_Heterogeneous_BleedingEdge.this.isEmpty();
				}

				@Override
				public void clear() {
					TrieMap_Heterogeneous_BleedingEdge.this.clear();
				}

				@Override
				public boolean contains(Object v) {
					return TrieMap_Heterogeneous_BleedingEdge.this.containsValue(v);
				}
			};
		}

		return values;
	}

	@Override
	public Set<java.util.Map.Entry<K, V>> entrySet() {
		Set<java.util.Map.Entry<K, V>> entrySet = null;

		if (entrySet == null) {
			entrySet = new AbstractSet<java.util.Map.Entry<K, V>>() {
				@Override
				public Iterator<java.util.Map.Entry<K, V>> iterator() {
					return new Iterator<Map.Entry<K, V>>() {
						private final Iterator<Map.Entry<K, V>> i = entryIterator();

						@Override
						public boolean hasNext() {
							return i.hasNext();
						}

						@Override
						public Map.Entry<K, V> next() {
							return i.next();
						}

						@Override
						public void remove() {
							i.remove();
						}
					};
				}

				@Override
				public int size() {
					return TrieMap_Heterogeneous_BleedingEdge.this.size();
				}

				@Override
				public boolean isEmpty() {
					return TrieMap_Heterogeneous_BleedingEdge.this.isEmpty();
				}

				@Override
				public void clear() {
					TrieMap_Heterogeneous_BleedingEdge.this.clear();
				}

				@Override
				public boolean contains(Object k) {
					return TrieMap_Heterogeneous_BleedingEdge.this.containsKey(k);
				}
			};
		}

		return entrySet;
	}

	@Override
	public boolean equals(final Object other) {
		if (other == this) {
			return true;
		}
		if (other == null) {
			return false;
		}

		if (other instanceof TrieMap_Heterogeneous_BleedingEdge) {
			TrieMap_Heterogeneous_BleedingEdge<?, ?> that = (TrieMap_Heterogeneous_BleedingEdge<?, ?>) other;

			if (this.cachedSize != that.cachedSize) {
				return false;
			}

			if (this.hashCode != that.hashCode) {
				return false;
			}

			return rootNode.equals(that.rootNode);
		} else if (other instanceof Map) {
			Map that = (Map) other;

			if (this.size() != that.size())
				return false;

			for (@SuppressWarnings("unchecked")
			Iterator<Map.Entry> it = that.entrySet().iterator(); it.hasNext();) {
				Map.Entry entry = it.next();

				try {
					@SuppressWarnings("unchecked")
					final K key = (K) entry.getKey();
					final Optional<V> result = rootNode.findByKey(key,
									transformHashCode(key.hashCode()), 0);

					if (!result.isPresent()) {
						return false;
					} else {
						@SuppressWarnings("unchecked")
						final V val = (V) entry.getValue();

						if (!result.get().equals(val)) {
							return false;
						}
					}
				} catch (ClassCastException unused) {
					return false;
				}
			}

			return true;
		}

		return false;
	}

	@Override
	public int hashCode() {
		return hashCode;
	}

	@Override
	public boolean isTransientSupported() {
		return true;
	}

	@Override
	public TransientMap<K, V> asTransient() {
		return new TransientTrieMap_Heterogeneous_BleedingEdge<K, V>(this);
	}

	/*
	 * For analysis purposes only.
	 */
	protected AbstractMapNode<K, V> getRootNode() {
		return rootNode;
	}

	/*
	 * For analysis purposes only.
	 */
	protected Iterator<AbstractMapNode<K, V>> nodeIterator() {
		return new TrieMap_Heterogeneous_BleedingEdgeNodeIterator<>(rootNode);
	}

	/*
	 * For analysis purposes only.
	 */
	protected int getNodeCount() {
		final Iterator<AbstractMapNode<K, V>> it = nodeIterator();
		int sumNodes = 0;

		for (; it.hasNext(); it.next()) {
			sumNodes += 1;
		}

		return sumNodes;
	}

	/*
	 * For analysis purposes only. Payload X Node
	 */
	protected int[][] arityCombinationsHistogram() {
		final Iterator<AbstractMapNode<K, V>> it = nodeIterator();
		final int[][] sumArityCombinations = new int[33][33];

		while (it.hasNext()) {
			final AbstractMapNode<K, V> node = it.next();
			sumArityCombinations[node.payloadArity()][node.nodeArity()] += 1;
		}

		return sumArityCombinations;
	}

	/*
	 * For analysis purposes only.
	 */
	protected int[] arityHistogram() {
		final int[][] sumArityCombinations = arityCombinationsHistogram();
		final int[] sumArity = new int[33];

		final int maxArity = 32; // TODO: factor out constant

		for (int j = 0; j <= maxArity; j++) {
			for (int maxRestArity = maxArity - j, k = 0; k <= maxRestArity - j; k++) {
				sumArity[j + k] += sumArityCombinations[j][k];
			}
		}

		return sumArity;
	}

	/*
	 * For analysis purposes only.
	 */
	public void printStatistics() {
		final int[][] sumArityCombinations = arityCombinationsHistogram();
		final int[] sumArity = arityHistogram();
		final int sumNodes = getNodeCount();

		final int[] cumsumArity = new int[33];
		for (int cumsum = 0, i = 0; i < 33; i++) {
			cumsum += sumArity[i];
			cumsumArity[i] = cumsum;
		}

		final float threshhold = 0.01f; // for printing results
		for (int i = 0; i < 33; i++) {
			float arityPercentage = (float) (sumArity[i]) / sumNodes;
			float cumsumArityPercentage = (float) (cumsumArity[i]) / sumNodes;

			if (arityPercentage != 0 && arityPercentage >= threshhold) {
				// details per level
				StringBuilder bldr = new StringBuilder();
				int max = i;
				for (int j = 0; j <= max; j++) {
					for (int k = max - j; k <= max - j; k++) {
						float arityCombinationsPercentage = (float) (sumArityCombinations[j][k])
										/ sumNodes;

						if (arityCombinationsPercentage != 0
										&& arityCombinationsPercentage >= threshhold) {
							bldr.append(String.format("%d/%d: %s, ", j, k,
											new DecimalFormat("0.00%")
															.format(arityCombinationsPercentage)));
						}
					}
				}
				final String detailPercentages = bldr.toString();

				// overview
				System.out.println(String.format("%2d: %s\t[cumsum = %s]\t%s", i,
								new DecimalFormat("0.00%").format(arityPercentage),
								new DecimalFormat("0.00%").format(cumsumArityPercentage),
								detailPercentages));
			}
		}
	}

	abstract static class Optional<T> {
		private static final Optional EMPTY = new Optional() {
			@Override
			boolean isPresent() {
				return false;
			}

			@Override
			Object get() {
				return null;
			}
		};

		@SuppressWarnings("unchecked")
		static <T> Optional<T> empty() {
			return EMPTY;
		}

		static <T> Optional<T> of(T value) {
			return new Value<T>(value);
		}

		abstract boolean isPresent();

		abstract T get();

		private static final class Value<T> extends Optional<T> {
			private final T value;

			private Value(T value) {
				this.value = value;
			}

			@Override
			boolean isPresent() {
				return true;
			}

			@Override
			T get() {
				return value;
			}
		}
	}

	static final class MapResult<K, V> {
		private V replacedValue;
		private boolean isModified;
		private boolean isReplaced;

		// update: inserted/removed single element, element count changed
		public void modified() {
			this.isModified = true;
		}

		public void updated(V replacedValue) {
			this.replacedValue = replacedValue;
			this.isModified = true;
			this.isReplaced = true;
		}

		// update: neither element, nor element count changed
		public static <K, V> MapResult<K, V> unchanged() {
			return new MapResult<>();
		}

		private MapResult() {
		}

		public boolean isModified() {
			return isModified;
		}

		public boolean hasReplacedValue() {
			return isReplaced;
		}

		public V getReplacedValue() {
			return replacedValue;
		}
	}

	protected static interface INode<K, V> {
	}

	protected static abstract class AbstractMapNode<K, V> implements INode<K, V> {

		protected static final sun.misc.Unsafe unsafe;

		static {
			try {
				Field field = sun.misc.Unsafe.class.getDeclaredField("theUnsafe");
				field.setAccessible(true);
				unsafe = (sun.misc.Unsafe) field.get(null);
			} catch (Exception e) {
				throw new RuntimeException(e);
			}
		}

		static final int TUPLE_LENGTH = 2;

		abstract boolean containsKey(final K key, final int keyHash, final int shift);

		abstract boolean containsKey(final K key, final int keyHash, final int shift,
						final Comparator<Object> cmp);

		abstract Optional<V> findByKey(final K key, final int keyHash, final int shift);

		abstract Optional<V> findByKey(final K key, final int keyHash, final int shift,
						final Comparator<Object> cmp);

		abstract CompactMapNode<K, V> updated(final AtomicReference<Thread> mutator, final K key,
						final V val, final int keyHash, final int shift,
						final MapResult<K, V> details);

		abstract CompactMapNode<K, V> updated(final AtomicReference<Thread> mutator, final K key,
						final V val, final int keyHash, final int shift,
						final MapResult<K, V> details, final Comparator<Object> cmp);

		abstract CompactMapNode<K, V> removed(final AtomicReference<Thread> mutator, final K key,
						final int keyHash, final int shift, final MapResult<K, V> details);

		abstract CompactMapNode<K, V> removed(final AtomicReference<Thread> mutator, final K key,
						final int keyHash, final int shift, final MapResult<K, V> details,
						final Comparator<Object> cmp);

		static final boolean isAllowedToEdit(AtomicReference<Thread> x, AtomicReference<Thread> y) {
			return x != null && y != null && (x == y || x.get() == y.get());
		}

		abstract boolean hasNodes();

		abstract int nodeArity();

		abstract AbstractMapNode<K, V> getNode(final int index);

		@Deprecated

		Iterator<? extends AbstractMapNode<K, V>> nodeIterator() {
			return new Iterator<AbstractMapNode<K, V>>() {

				int nextIndex = 0;
				final int nodeArity = AbstractMapNode.this.nodeArity();

				@Override
				public void remove() {
					throw new UnsupportedOperationException();
				}

				@Override
				public AbstractMapNode<K, V> next() {
					if (!hasNext())
						throw new NoSuchElementException();
					return AbstractMapNode.this.getNode(nextIndex++);
				}

				@Override
				public boolean hasNext() {
					return nextIndex < nodeArity;
				}
			};
		}

		abstract boolean hasPayload();

		abstract int payloadArity();

		abstract K getKey(final int index);

		abstract V getValue(final int index);

		abstract Map.Entry<K, V> getKeyValueEntry(final int index);

		@Deprecated

		abstract Object getRareKey(final int index);

		abstract Object getRareValue(final int index);

		abstract boolean hasSlots();

		abstract int slotArity();

		abstract Object getSlot(final int index);

		/**
		 * The arity of this trie node (i.e. number of values and nodes stored
		 * on this level).
		 * 
		 * @return sum of nodes and values stored within
		 */

		int arity() {
			return payloadArity() + nodeArity();
		}

		int size() {
			final Iterator<K> it = new MapKeyIterator<>(this);

			int size = 0;
			while (it.hasNext()) {
				size += 1;
				it.next();
			}

			return size;
		}
	}

	private abstract static class CompactMapNode<K, V> extends AbstractMapNode<K, V> {

		static final Class[][] initializeSpecializationsByContentAndNodes() {
			Class[][] next = new Class[33][33];

			try {
				for (int m = 0; m <= 32; m++) {
					for (int n = 0; n <= 32; n++) {
						int mNext = m;
						int nNext = n;

						if (mNext < 0 || mNext > 32 || nNext < 0 || nNext > 32
										|| nNext + mNext > 32) {
							next[m][n] = null;
						} else {
							next[m][n] = Class.forName(
											String.format("org.eclipse.imp.pdb.facts.util.TrieMap_Heterogeneous_BleedingEdge$Map%dTo%dNode_Heterogeneous_BleedingEdge",
															mNext, nNext));
						}
					}
				}
			} catch (ClassNotFoundException e) {
				throw new RuntimeException(e);
			}

			return next;
		}

		static final Class[][] specializationsByContentAndNodes = initializeSpecializationsByContentAndNodes();

		static final long globalNodeMapOffset = fieldOffset(
						Map0To2Node_Heterogeneous_BleedingEdge.class, "rawMap1");

		static final long globalDataMapOffset = fieldOffset(
						Map0To2Node_Heterogeneous_BleedingEdge.class, "rawMap2");

		static final long globalArrayOffsetsOffset = fieldOffset(
						Map0To2Node_Heterogeneous_BleedingEdge.class, "arrayOffsets");

		static final long globalNodeArityOffset = fieldOffset(
						Map0To2Node_Heterogeneous_BleedingEdge.class, "nodeArity");

		static final long globalPayloadArityOffset = fieldOffset(
						Map0To2Node_Heterogeneous_BleedingEdge.class, "payloadArity");

		static final long globalSlotArityOffset = fieldOffset(
						Map0To2Node_Heterogeneous_BleedingEdge.class, "slotArity");

		static final long initializeArrayBase() {
			final Class<Map0To2Node_Heterogeneous_BleedingEdge> dstClass = Map0To2Node_Heterogeneous_BleedingEdge.class;

			try {
				final long[] dstArrayOffsets = (long[]) unsafe.getObject(dstClass,
								globalArrayOffsetsOffset);

				// assuems that both are of type Object and next to each other
				// in memory
				return dstArrayOffsets[0];
			} catch (SecurityException e) {
				throw new RuntimeException(e);
			}
		}

		static final long arrayBase = initializeArrayBase();

		static final long initializeAddressSize() {
			final Class<Map0To2Node_Heterogeneous_BleedingEdge> dstClass = Map0To2Node_Heterogeneous_BleedingEdge.class;

			try {
				final long[] dstArrayOffsets = (long[]) unsafe.getObject(dstClass,
								globalArrayOffsetsOffset);

				// assuems that both are of type Object and next to each other
				// in memory
				return dstArrayOffsets[1] - dstArrayOffsets[0];
			} catch (SecurityException e) {
				throw new RuntimeException(e);
			}
		}

		static final long addressSize = initializeAddressSize();

		static final int hashCodeLength() {
			return 32;
		}

		static final int bitPartitionSize() {
			return 5;
		}

		static final int bitPartitionMask() {
			return 0b11111;
		}

		static final int mask(final int keyHash, final int shift) {
			return (keyHash >>> shift) & bitPartitionMask();
		}

		static final int bitpos(final int mask) {
			return (int) (1 << mask);
		}

		abstract int nodeMap();

		abstract int dataMap();

		abstract int rareMap();

		abstract int rawMap1();

		abstract int rawMap2();

		static final boolean isRare(final Object o) {
			throw new UnsupportedOperationException(); // TODO: to implement
		}

		static final boolean isRare(final Object o0, final Object o1) {
			throw new UnsupportedOperationException(); // TODO: to implement
		}

		static final boolean isRare(final int bitpos) {
			throw new UnsupportedOperationException(); // TODO: to implement
		}

		enum ContentType {
			KEY, VAL, RARE_KEY, RARE_VAL, NODE, SLOT
		}

		int logicalToPhysicalIndex(final ContentType type, final int index) {
			final int physicalIndex;

			switch (type) {
			case KEY:
				physicalIndex = TUPLE_LENGTH * index;
				break;
			case VAL:
				physicalIndex = TUPLE_LENGTH * index + 1;
				break;
			case RARE_KEY:
				physicalIndex = TUPLE_LENGTH * index
								+ TUPLE_LENGTH * java.lang.Integer.bitCount(dataMap());
				break;
			case RARE_VAL:
				physicalIndex = TUPLE_LENGTH * index
								+ TUPLE_LENGTH * java.lang.Integer.bitCount(dataMap()) + 1;
				break;
			case NODE:
				physicalIndex = slotArity() - 1 - index;
				break;
			case SLOT:
				physicalIndex = index;
				break;
			default:
				throw new IllegalStateException("Cases not exhausted?");
			}

			return physicalIndex;
		}

		static final byte sizeEmpty() {
			return 0b0;
		}

		static final byte sizeOne() {
			return 0b1;
		}

		static final byte sizeMoreThanOne() {
			return 0b10;
		}

		byte sizePredicate() {
			if (this.nodeArity() == 0) {
				switch (this.payloadArity()) {
				case 0:
					return sizeEmpty();
				case 1:
					return sizeOne();
				default:
					return sizeMoreThanOne();
				}
			} else {
				return sizeMoreThanOne();
			}
		}

		@Override

		CompactMapNode<K, V> getNode(final int index) {
			try {
				final long[] arrayOffsets = (long[]) unsafe.getObject(this.getClass(),
								globalArrayOffsetsOffset);
				return (CompactMapNode<K, V>) unsafe.getObject(this,
								arrayOffsets[logicalToPhysicalIndex(ContentType.NODE, index)]);
			} catch (SecurityException e) {
				throw new RuntimeException(e);
			}
		}

		boolean nodeInvariant() {
			boolean inv1 = (size() - payloadArity() >= 2 * (arity() - payloadArity()));
			boolean inv2 = (this.arity() == 0) ? sizePredicate() == sizeEmpty() : true;
			boolean inv3 = (this.arity() == 1 && payloadArity() == 1) ? sizePredicate() == sizeOne()
							: true;
			boolean inv4 = (this.arity() >= 2) ? sizePredicate() == sizeMoreThanOne() : true;
			boolean inv5 = (this.nodeArity() >= 0) && (this.payloadArity() >= 0)
							&& ((this.payloadArity() + this.nodeArity()) == this.arity());

			return inv1 && inv2 && inv3 && inv4 && inv5;
		}

		static final long[] arrayOffsets(final Class clazz, final String[] fieldNames) {
			try {
				long[] arrayOffsets = new long[fieldNames.length];

				for (int i = 0; i < fieldNames.length; i++) {
					arrayOffsets[i] = unsafe
									.objectFieldOffset(clazz.getDeclaredField(fieldNames[i]));
				}

				return arrayOffsets;
			} catch (NoSuchFieldException | SecurityException e) {
				throw new RuntimeException(e);
			}
		}

		static final long fieldOffset(final Class clazz, final String fieldName) {
			try {
				List<Class> bottomUpHierarchy = new LinkedList<>();

				Class currentClass = clazz;
				while (currentClass != null) {
					bottomUpHierarchy.add(currentClass);
					currentClass = currentClass.getSuperclass();
				}

				final java.util.Optional<Field> fieldNameField = bottomUpHierarchy.stream()
								.flatMap(hierarchyClass -> Stream
												.of(hierarchyClass.getDeclaredFields()))
								.filter(f -> f.getName().equals(fieldName)).findFirst();

				if (fieldNameField.isPresent()) {

					if (java.lang.reflect.Modifier.isStatic(fieldNameField.get().getModifiers())) {
						return unsafe.staticFieldOffset(fieldNameField.get());
					} else {
						return unsafe.objectFieldOffset(fieldNameField.get());
					}
				} else {
					return sun.misc.Unsafe.INVALID_FIELD_OFFSET;
				}
			} catch (SecurityException e) {
				throw new RuntimeException(e);
			}
		}

		CompactMapNode<K, V> copyAndSetValue(final AtomicReference<Thread> mutator,
						final int bitpos, final V val) {
			try {
				final int valIdx = dataIndex(bitpos);

				final Class srcClass = this.getClass();
				final Class dstClass = specializationsByContentAndNodes[payloadArity()][nodeArity()];

				if (dstClass == null) {
					throw new RuntimeException(String.format(
									"[%s] No new specialization [payloadArity=%d, nodeArity=%d].",
									srcClass.getName(), payloadArity(), nodeArity()));
				}

				final CompactMapNode<K, V> src = this;
				final CompactMapNode<K, V> dst = (CompactMapNode<K, V>) (unsafe
								.allocateInstance(dstClass));

				final long[] srcArrayOffsets = (long[]) unsafe.getObject(srcClass,
								globalArrayOffsetsOffset);

				final long[] dstArrayOffsets = (long[]) unsafe.getObject(dstClass,
								globalArrayOffsetsOffset);

				// copy and update bitmaps
				final int newNodeMap = unsafe.getInt(src, globalNodeMapOffset);
				unsafe.putInt(dst, globalNodeMapOffset, newNodeMap);

				// copy and update bitmaps
				final int newDataMap = unsafe.getInt(src, globalDataMapOffset);
				unsafe.putInt(dst, globalDataMapOffset, newDataMap);

				// copy payload range
				for (int i = 0; i < valIdx; i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.KEY, i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.KEY, i)]));
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.VAL, i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.VAL, i)]));
				}

				unsafe.putObject(dst,
								dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.KEY,
												valIdx)],
								unsafe.getObject(src, srcArrayOffsets[src
												.logicalToPhysicalIndex(ContentType.KEY, valIdx)]));
				unsafe.putObject(dst, dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.VAL,
								valIdx)], val);

				for (int i = valIdx + 1; i < payloadArity(); i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.KEY, i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.KEY, i)]));
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.VAL, i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.VAL, i)]));
				}

				// copy node range
				for (int i = 0; i < nodeArity(); i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.NODE,
													i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.NODE, i)]));
				}

				return dst;
			} catch (InstantiationException e) {
				throw new RuntimeException(e);
			}
		}

		CompactMapNode<K, V> copyAndInsertValue(final AtomicReference<Thread> mutator,
						final int bitpos, final K key, final V val) {
			try {
				final int valIdx = dataIndex(bitpos);

				final Class srcClass = this.getClass();
				final Class dstClass = specializationsByContentAndNodes[payloadArity()
								+ 1][nodeArity()];

				if (dstClass == null) {
					throw new RuntimeException(String.format(
									"[%s] No new specialization [payloadArity=%d, nodeArity=%d].",
									srcClass.getName(), payloadArity(), nodeArity()));
				}

				final CompactMapNode<K, V> src = this;
				final CompactMapNode<K, V> dst = (CompactMapNode<K, V>) (unsafe
								.allocateInstance(dstClass));

				final long[] srcArrayOffsets = (long[]) unsafe.getObject(srcClass,
								globalArrayOffsetsOffset);

				final long[] dstArrayOffsets = (long[]) unsafe.getObject(dstClass,
								globalArrayOffsetsOffset);

				// copy and update bitmaps
				final int newNodeMap = unsafe.getInt(src, globalNodeMapOffset);
				unsafe.putInt(dst, globalNodeMapOffset, newNodeMap);

				// copy and update bitmaps
				final int newDataMap = (int) (unsafe.getInt(src, globalDataMapOffset) | bitpos);
				unsafe.putInt(dst, globalDataMapOffset, newDataMap);

				// copy payload range
				for (int i = 0; i < valIdx; i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.KEY, i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.KEY, i)]));
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.VAL, i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.VAL, i)]));
				}

				unsafe.putObject(dst, dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.KEY,
								valIdx)], key);
				unsafe.putObject(dst, dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.VAL,
								valIdx)], val);

				for (int i = valIdx; i < payloadArity(); i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.KEY,
													i + 1)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.KEY, i)]));
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.VAL,
													i + 1)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.VAL, i)]));
				}

				// copy node range
				for (int i = 0; i < nodeArity(); i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.NODE,
													i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.NODE, i)]));
				}

				return dst;
			} catch (InstantiationException e) {
				throw new RuntimeException(e);
			}
		}

		CompactMapNode<K, V> copyAndRemoveValue(final AtomicReference<Thread> mutator,
						final int bitpos) {
			try {
				final int valIdx = dataIndex(bitpos);

				final Class srcClass = this.getClass();
				final Class dstClass = specializationsByContentAndNodes[payloadArity()
								- 1][nodeArity()];

				if (dstClass == null) {
					throw new RuntimeException(String.format(
									"[%s] No new specialization [payloadArity=%d, nodeArity=%d].",
									srcClass.getName(), payloadArity(), nodeArity()));
				}

				final CompactMapNode<K, V> src = this;
				final CompactMapNode<K, V> dst = (CompactMapNode<K, V>) (unsafe
								.allocateInstance(dstClass));

				final long[] srcArrayOffsets = (long[]) unsafe.getObject(srcClass,
								globalArrayOffsetsOffset);

				final long[] dstArrayOffsets = (long[]) unsafe.getObject(dstClass,
								globalArrayOffsetsOffset);

				// copy and update bitmaps
				final int newNodeMap = unsafe.getInt(src, globalNodeMapOffset);
				unsafe.putInt(dst, globalNodeMapOffset, newNodeMap);

				// copy and update bitmaps
				final int newDataMap = (int) (unsafe.getInt(src, globalDataMapOffset) ^ bitpos);
				unsafe.putInt(dst, globalDataMapOffset, newDataMap);

				// copy payload range
				for (int i = 0; i < valIdx; i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.KEY, i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.KEY, i)]));
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.VAL, i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.VAL, i)]));
				}
				for (int i = valIdx + 1; i < payloadArity(); i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.KEY, i)],
									unsafe.getObject(src,
													srcArrayOffsets[src.logicalToPhysicalIndex(
																	ContentType.KEY, i + 1)]));
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.VAL, i)],
									unsafe.getObject(src,
													srcArrayOffsets[src.logicalToPhysicalIndex(
																	ContentType.VAL, i + 1)]));
				}

				// copy node range
				for (int i = 0; i < nodeArity(); i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.NODE,
													i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.NODE, i)]));
				}

				return dst;
			} catch (InstantiationException e) {
				throw new RuntimeException(e);
			}
		}

		CompactMapNode<K, V> copyAndSetNode(final AtomicReference<Thread> mutator, final int bitpos,
						final CompactMapNode<K, V> node) {
			try {
				final int idx = nodeIndex(bitpos);

				final Class srcClass = this.getClass();
				final Class dstClass = specializationsByContentAndNodes[payloadArity()][nodeArity()];

				if (dstClass == null) {
					throw new RuntimeException(String.format(
									"[%s] No new specialization [payloadArity=%d, nodeArity=%d].",
									srcClass.getName(), payloadArity(), nodeArity()));
				}

				final CompactMapNode<K, V> src = this;
				final CompactMapNode<K, V> dst = (CompactMapNode<K, V>) (unsafe
								.allocateInstance(dstClass));

				final long[] srcArrayOffsets = (long[]) unsafe.getObject(srcClass,
								globalArrayOffsetsOffset);

				final long[] dstArrayOffsets = (long[]) unsafe.getObject(dstClass,
								globalArrayOffsetsOffset);

				// copy and update bitmaps
				final int newNodeMap = unsafe.getInt(src, globalNodeMapOffset);
				unsafe.putInt(dst, globalNodeMapOffset, newNodeMap);

				// copy and update bitmaps
				final int newDataMap = unsafe.getInt(src, globalDataMapOffset);
				unsafe.putInt(dst, globalDataMapOffset, newDataMap);

				// copy payload range
				for (int i = 0; i < payloadArity(); i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.KEY, i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.KEY, i)]));
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.VAL, i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.VAL, i)]));
				}

				// copy node range
				for (int i = 0; i < idx; i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.NODE,
													i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.NODE, i)]));
				}

				unsafe.putObject(dst,
								dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.NODE, idx)],
								node);

				for (int i = idx + 1; i < nodeArity(); i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.NODE,
													i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.NODE, i)]));
				}

				return dst;
			} catch (InstantiationException e) {
				throw new RuntimeException(e);
			}
		}

		CompactMapNode<K, V> copyAndMigrateFromInlineToNode(final AtomicReference<Thread> mutator,
						final int bitpos, final CompactMapNode<K, V> node) {
			try {
				final int idxOld = dataIndex(bitpos);
				final int idxNew = nodeIndex(bitpos);

				final Class srcClass = this.getClass();
				final Class dstClass = specializationsByContentAndNodes[payloadArity()
								- 1][nodeArity() + 1];

				if (dstClass == null) {
					throw new RuntimeException(String.format(
									"[%s] No new specialization [payloadArity=%d, nodeArity=%d].",
									srcClass.getName(), payloadArity(), nodeArity()));
				}

				final CompactMapNode<K, V> src = this;
				final CompactMapNode<K, V> dst = (CompactMapNode<K, V>) (unsafe
								.allocateInstance(dstClass));

				final long[] srcArrayOffsets = (long[]) unsafe.getObject(srcClass,
								globalArrayOffsetsOffset);

				final long[] dstArrayOffsets = (long[]) unsafe.getObject(dstClass,
								globalArrayOffsetsOffset);

				// copy and update bitmaps
				final int newNodeMap = (int) (unsafe.getInt(src, globalNodeMapOffset) | bitpos);
				unsafe.putInt(dst, globalNodeMapOffset, newNodeMap);

				// copy and update bitmaps
				final int newDataMap = (int) (unsafe.getInt(src, globalDataMapOffset) ^ bitpos);
				unsafe.putInt(dst, globalDataMapOffset, newDataMap);

				// copy payload range
				for (int i = 0; i < idxOld; i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.KEY, i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.KEY, i)]));
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.VAL, i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.VAL, i)]));
				}

				for (int i = idxOld + 1; i < payloadArity(); i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.KEY,
													i - 1)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.KEY, i)]));
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.VAL,
													i - 1)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.VAL, i)]));
				}

				// copy node range
				for (int i = 0; i < idxNew; i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.NODE,
													i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.NODE, i)]));
				}

				unsafe.putObject(dst, dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.NODE,
								idxNew)], node);

				for (int i = idxNew; i < nodeArity(); i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.NODE,
													i + 1)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.NODE, i)]));
				}

				return dst;
			} catch (InstantiationException e) {
				throw new RuntimeException(e);
			}
		}

		CompactMapNode<K, V> copyAndMigrateFromNodeToInline(final AtomicReference<Thread> mutator,
						final int bitpos, final CompactMapNode<K, V> node) {
			try {
				final int idxOld = nodeIndex(bitpos);
				final int idxNew = dataIndex(bitpos);

				final Class srcClass = this.getClass();
				final Class dstClass = specializationsByContentAndNodes[payloadArity()
								+ 1][nodeArity() - 1];

				if (dstClass == null) {
					throw new RuntimeException(String.format(
									"[%s] No new specialization [payloadArity=%d, nodeArity=%d].",
									srcClass.getName(), payloadArity(), nodeArity()));
				}

				final CompactMapNode<K, V> src = this;
				final CompactMapNode<K, V> dst = (CompactMapNode<K, V>) (unsafe
								.allocateInstance(dstClass));

				final long[] srcArrayOffsets = (long[]) unsafe.getObject(srcClass,
								globalArrayOffsetsOffset);

				final long[] dstArrayOffsets = (long[]) unsafe.getObject(dstClass,
								globalArrayOffsetsOffset);

				// copy and update bitmaps
				final int newNodeMap = (int) (unsafe.getInt(src, globalNodeMapOffset) ^ bitpos);
				unsafe.putInt(dst, globalNodeMapOffset, newNodeMap);

				// copy and update bitmaps
				final int newDataMap = (int) (unsafe.getInt(src, globalDataMapOffset) | bitpos);
				unsafe.putInt(dst, globalDataMapOffset, newDataMap);

				// copy payload range
				for (int i = 0; i < idxNew; i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.KEY, i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.KEY, i)]));
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.VAL, i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.VAL, i)]));
				}

				unsafe.putObject(dst, dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.KEY,
								idxNew)], node.getKey(0));
				unsafe.putObject(dst, dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.VAL,
								idxNew)], node.getValue(0));

				for (int i = idxNew; i < payloadArity(); i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.KEY,
													i + 1)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.KEY, i)]));
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.VAL,
													i + 1)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.VAL, i)]));
				}

				// copy node range
				for (int i = 0; i < idxOld; i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.NODE,
													i)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.NODE, i)]));
				}
				for (int i = idxOld + 1; i < nodeArity(); i++) {
					unsafe.putObject(dst,
									dstArrayOffsets[dst.logicalToPhysicalIndex(ContentType.NODE,
													i - 1)],
									unsafe.getObject(src, srcArrayOffsets[src
													.logicalToPhysicalIndex(ContentType.NODE, i)]));
				}

				return dst;
			} catch (InstantiationException e) {
				throw new RuntimeException(e);
			}
		}

		static final <K, V> CompactMapNode<K, V> mergeTwoKeyValPairs(final K key0, final V val0,
						final int keyHash0, final K key1, final V val1, final int keyHash1,
						final int shift) {
			assert!(key0.equals(key1));

			if (shift >= hashCodeLength()) {
				// throw new IllegalStateException("Hash collision not yet
				// fixed.");
				return new HashCollisionMapNode_Heterogeneous_BleedingEdge<>(keyHash0,
								(K[]) new Object[] { key0, key1 },
								(V[]) new Object[] { val0, val1 });
			}

			final int mask0 = mask(keyHash0, shift);
			final int mask1 = mask(keyHash1, shift);

			if (mask0 != mask1) {
				// both nodes fit on same level
				final int dataMap = (int) (bitpos(mask0) | bitpos(mask1));

				if (mask0 < mask1) {
					return nodeOf0x2(null, (int) 0, dataMap, key0, val0, key1, val1);
				} else {
					return nodeOf0x2(null, (int) 0, dataMap, key1, val1, key0, val0);
				}
			} else {
				final CompactMapNode<K, V> node = mergeTwoKeyValPairs(key0, val0, keyHash0, key1,
								val1, keyHash1, shift + bitPartitionSize());
				// values fit on next level

				final int nodeMap = bitpos(mask0);
				return nodeOf1x0(null, nodeMap, (int) 0, node);
			}
		}

		protected static final CompactMapNode EMPTY_NODE = new Map0To0Node_Heterogeneous_BleedingEdge<>(
						null, (int) 0, (int) 0);

		static final int index(final int bitmap, final int bitpos) {
			return java.lang.Integer.bitCount(bitmap & (bitpos - 1));
		}

		static final int index(final int bitmap, final int mask, final int bitpos) {
			return (bitmap == -1) ? mask : index(bitmap, bitpos);
		}

		int dataIndex(final int bitpos) {
			return java.lang.Integer.bitCount(dataMap() & (bitpos - 1));
		}

		int nodeIndex(final int bitpos) {
			return java.lang.Integer.bitCount(nodeMap() & (bitpos - 1));
		}

		int rareIndex(final int bitpos) {
			throw new UnsupportedOperationException(); // TODO: to implement
		}

		CompactMapNode<K, V> nodeAt(final int bitpos) {
			return getNode(nodeIndex(bitpos));
		}

		private static final <K, V> boolean equals(final Object o1, final Object o2) {
			if (null == o1 || null == o2) {
				return false;
			}
			if (o1 == o2) {
				return true;
			}
			if (o1.getClass() != o2.getClass()) {
				return false;
			}

			final CompactMapNode<K, V> src = (CompactMapNode<K, V>) o1;
			final CompactMapNode<K, V> dst = (CompactMapNode<K, V>) o2;

			final Class clazz = o1.getClass();
			final long[] arrayOffsets = (long[]) unsafe.getObject(clazz, globalArrayOffsetsOffset);

			// compare nodeMap
			if (!(unsafe.getInt(src, globalNodeMapOffset) == unsafe.getInt(dst,
							globalNodeMapOffset))) {
				return false;
			}

			// compare dataMap
			if (!(unsafe.getInt(src, globalDataMapOffset) == unsafe.getInt(dst,
							globalDataMapOffset))) {
				return false;
			}

			// compare payload range
			for (int i = 0; i < src.payloadArity(); i++) {
				if (!(unsafe.getObject(src,
								arrayOffsets[src.logicalToPhysicalIndex(ContentType.KEY, i)])
								.equals(unsafe.getObject(dst, arrayOffsets[dst
												.logicalToPhysicalIndex(ContentType.KEY, i)])))) {
					return false;
				}

				if (!(unsafe.getObject(src,
								arrayOffsets[src.logicalToPhysicalIndex(ContentType.VAL, i)])
								.equals(unsafe.getObject(dst, arrayOffsets[dst
												.logicalToPhysicalIndex(ContentType.VAL, i)])))) {
					return false;
				}
			}

			// compare node range
			for (int i = 0; i < src.nodeArity(); i++) {
				if (!(unsafe.getObject(src,
								arrayOffsets[src.logicalToPhysicalIndex(ContentType.NODE, i)])
								.equals(unsafe.getObject(dst, arrayOffsets[dst
												.logicalToPhysicalIndex(ContentType.NODE, i)])))) {
					return false;
				}
			}

			return true;
		}

		static final byte recoverMask(int map, final byte i_th) {
			assert 1 <= i_th && i_th <= 32;

			byte cnt1 = 0;
			byte mask = 0;

			while (mask < 32) {
				if ((map & 0x01) == 0x01) {
					cnt1 += 1;

					if (cnt1 == i_th) {
						return mask;
					}
				}

				map = (int) (map >> 1);
				mask += 1;
			}

			assert cnt1 != i_th;
			throw new RuntimeException("Called with invalid arguments.");
		}

		@Override

		public String toString() {
			final StringBuilder bldr = new StringBuilder();
			bldr.append('[');
			for (byte i = 0; i < payloadArity(); i++) {
				final byte pos = recoverMask(dataMap(), (byte) (i + 1));
				bldr.append(String.format("@%d<#%d,#%d>", pos, Objects.hashCode(getKey(i)),
								Objects.hashCode(getValue(i))));
				if (!((i + 1) == payloadArity())) {
					bldr.append(", ");
				}
			}
			if (payloadArity() > 0 && nodeArity() > 0) {
				bldr.append(", ");
			}
			for (byte i = 0; i < nodeArity(); i++) {
				final byte pos = recoverMask(nodeMap(), (byte) (i + 1));
				bldr.append(String.format("@%d: %s", pos, getNode(i)));
				if (!((i + 1) == nodeArity())) {
					bldr.append(", ");
				}
			}
			bldr.append(']');
			return bldr.toString();
		}

		static final <K, V> CompactMapNode<K, V> nodeOf1x0(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0) {
			try {
				final Class<Map0To1Node_Heterogeneous_BleedingEdge> dstClass = Map0To1Node_Heterogeneous_BleedingEdge.class;

				final Map0To1Node_Heterogeneous_BleedingEdge dst = (Map0To1Node_Heterogeneous_BleedingEdge) (unsafe
								.allocateInstance(dstClass));

				unsafe.putInt(dst, globalNodeMapOffset, nodeMap);
				unsafe.putInt(dst, globalDataMapOffset, dataMap);

				// works in presence of padding
				long offset = arrayBase;
				unsafe.putObject(dst, offset, slot0);
				offset += addressSize;

				return dst;
			} catch (InstantiationException | SecurityException e) {
				throw new RuntimeException(e);
			}
		}

		static final <K, V> CompactMapNode<K, V> nodeOf0x1(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1) {
			try {
				final Class<Map1To0Node_Heterogeneous_BleedingEdge> dstClass = Map1To0Node_Heterogeneous_BleedingEdge.class;

				final Map1To0Node_Heterogeneous_BleedingEdge dst = (Map1To0Node_Heterogeneous_BleedingEdge) (unsafe
								.allocateInstance(dstClass));

				unsafe.putInt(dst, globalNodeMapOffset, nodeMap);
				unsafe.putInt(dst, globalDataMapOffset, dataMap);

				// works in presence of padding
				long offset = arrayBase;
				unsafe.putObject(dst, offset, key1);
				offset += addressSize;
				unsafe.putObject(dst, offset, val1);
				offset += addressSize;

				return dst;
			} catch (InstantiationException | SecurityException e) {
				throw new RuntimeException(e);
			}
		}

		static final <K, V> CompactMapNode<K, V> nodeOf0x2(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2) {
			try {
				final Class<Map2To0Node_Heterogeneous_BleedingEdge> dstClass = Map2To0Node_Heterogeneous_BleedingEdge.class;

				final Map2To0Node_Heterogeneous_BleedingEdge dst = (Map2To0Node_Heterogeneous_BleedingEdge) (unsafe
								.allocateInstance(dstClass));

				unsafe.putInt(dst, globalNodeMapOffset, nodeMap);
				unsafe.putInt(dst, globalDataMapOffset, dataMap);

				// works in presence of padding
				long offset = arrayBase;
				unsafe.putObject(dst, offset, key1);
				offset += addressSize;
				unsafe.putObject(dst, offset, val1);
				offset += addressSize;
				unsafe.putObject(dst, offset, key2);
				offset += addressSize;
				unsafe.putObject(dst, offset, val2);
				offset += addressSize;

				return dst;
			} catch (InstantiationException | SecurityException e) {
				throw new RuntimeException(e);
			}
		}

		@Override

		K getKey(final int index) {
			try {
				final long[] arrayOffsets = (long[]) unsafe.getObject(this.getClass(),
								globalArrayOffsetsOffset);
				return (K) unsafe.getObject(this,
								arrayOffsets[logicalToPhysicalIndex(ContentType.KEY, index)]);
			} catch (SecurityException e) {
				throw new RuntimeException(e);
			}
		}

		@Override

		Map.Entry<K, V> getKeyValueEntry(final int index) {
			return entryOf(getKey(index), getValue(index));
		}

		@Override

		int payloadArity() {
			try {
				return unsafe.getInt(this.getClass(), globalPayloadArityOffset);
			} catch (SecurityException e) {
				throw new RuntimeException(e);
			}
		}

		@Override

		CompactMapNode<K, V> updated(final AtomicReference<Thread> mutator, final K key,
						final V val, final int keyHash, final int shift,
						final MapResult<K, V> details) {
			final int mask = mask(keyHash, shift);
			final int bitpos = bitpos(mask);

			if ((dataMap() & bitpos) != 0) { // inplace value
				final int dataIndex = dataIndex(bitpos);
				final K currentKey = getKey(dataIndex);

				if (currentKey.equals(key)) {
					final V currentVal = getValue(dataIndex);

					// update mapping
					details.updated(currentVal);
					return copyAndSetValue(mutator, bitpos, val);
				} else {
					final V currentVal = getValue(dataIndex);
					final CompactMapNode<K, V> subNodeNew = mergeTwoKeyValPairs(currentKey,
									currentVal, transformHashCode(currentKey.hashCode()), key, val,
									keyHash, shift + bitPartitionSize());

					details.modified();
					return copyAndMigrateFromInlineToNode(mutator, bitpos, subNodeNew);
				}
			} else if ((nodeMap() & bitpos) != 0) { // node (not value)
				final CompactMapNode<K, V> subNode = nodeAt(bitpos);
				final CompactMapNode<K, V> subNodeNew = subNode.updated(mutator, key, val, keyHash,
								shift + bitPartitionSize(), details);

				if (details.isModified()) {
					return copyAndSetNode(mutator, bitpos, subNodeNew);
				} else {
					return this;
				}
			} else {
				// no value
				details.modified();
				return copyAndInsertValue(mutator, bitpos, key, val);
			}
		}

		@Override

		boolean containsKey(final K key, final int keyHash, final int shift,
						final Comparator<Object> cmp) {
			final int mask = mask(keyHash, shift);
			final int bitpos = bitpos(mask);

			final int dataMap = dataMap();
			if ((dataMap & bitpos) != 0) {
				final int index = index(dataMap, mask, bitpos);
				return cmp.compare(getKey(index), key) == 0;
			}

			final int nodeMap = nodeMap();
			if ((nodeMap & bitpos) != 0) {
				final int index = index(nodeMap, mask, bitpos);
				return getNode(index).containsKey(key, keyHash, shift + bitPartitionSize(), cmp);
			}

			return false;
		}

		@Override

		Optional<V> findByKey(final K key, final int keyHash, final int shift,
						final Comparator<Object> cmp) {
			final int mask = mask(keyHash, shift);
			final int bitpos = bitpos(mask);

			if ((dataMap() & bitpos) != 0) { // inplace value
				final int index = dataIndex(bitpos);
				if (cmp.compare(getKey(index), key) == 0) {
					final V result = getValue(index);

					return Optional.of(result);
				}

				return Optional.empty();
			}

			if ((nodeMap() & bitpos) != 0) { // node (not value)
				final AbstractMapNode<K, V> subNode = nodeAt(bitpos);

				return subNode.findByKey(key, keyHash, shift + bitPartitionSize(), cmp);
			}

			return Optional.empty();
		}

		@Override

		Object getSlot(final int index) {
			try {
				final long[] arrayOffsets = (long[]) unsafe.getObject(this.getClass(),
								globalArrayOffsetsOffset);
				return (Object) unsafe.getObject(this,
								arrayOffsets[logicalToPhysicalIndex(ContentType.SLOT, index)]);
			} catch (SecurityException e) {
				throw new RuntimeException(e);
			}
		}

		@Override

		boolean hasPayload() {
			return payloadArity() != 0;
		}

		@Override

		Optional<V> findByKey(final K key, final int keyHash, final int shift) {
			final int mask = mask(keyHash, shift);
			final int bitpos = bitpos(mask);

			if ((dataMap() & bitpos) != 0) { // inplace value
				final int index = dataIndex(bitpos);
				if (getKey(index).equals(key)) {
					final V result = getValue(index);

					return Optional.of(result);
				}

				return Optional.empty();
			}

			if ((nodeMap() & bitpos) != 0) { // node (not value)
				final AbstractMapNode<K, V> subNode = nodeAt(bitpos);

				return subNode.findByKey(key, keyHash, shift + bitPartitionSize());
			}

			return Optional.empty();
		}

		@Override

		boolean hasNodes() {
			return nodeArity() != 0;
		}

		@Override

		Object getRareValue(final int index) {
			try {
				final long[] arrayOffsets = (long[]) unsafe.getObject(this.getClass(),
								globalArrayOffsetsOffset);
				return (V) unsafe.getObject(this,
								arrayOffsets[logicalToPhysicalIndex(ContentType.RARE_VAL, index)]);
			} catch (SecurityException e) {
				throw new RuntimeException(e);
			}
		}

		@Override

		V getValue(final int index) {
			try {
				final long[] arrayOffsets = (long[]) unsafe.getObject(this.getClass(),
								globalArrayOffsetsOffset);
				return (V) unsafe.getObject(this,
								arrayOffsets[logicalToPhysicalIndex(ContentType.VAL, index)]);
			} catch (SecurityException e) {
				throw new RuntimeException(e);
			}
		}

		@Override

		boolean hasSlots() {
			return slotArity() != 0;
		}

		@Override

		int nodeArity() {
			try {
				return unsafe.getInt(this.getClass(), globalNodeArityOffset);
			} catch (SecurityException e) {
				throw new RuntimeException(e);
			}
		}

		@Override

		CompactMapNode<K, V> removed(final AtomicReference<Thread> mutator, final K key,
						final int keyHash, final int shift, final MapResult<K, V> details,
						final Comparator<Object> cmp) {
			final int mask = mask(keyHash, shift);
			final int bitpos = bitpos(mask);

			if ((dataMap() & bitpos) != 0) { // inplace value
				final int dataIndex = dataIndex(bitpos);

				if (cmp.compare(getKey(dataIndex), key) == 0) {
					final V currentVal = getValue(dataIndex);
					details.updated(currentVal);

					if (this.payloadArity() == 2 && this.nodeArity() == 0) {
						/*
						 * Create new node with remaining pair. The new node
						 * will a) either become the new root returned, or b)
						 * unwrapped and inlined during returning.
						 */
						final int newDataMap = (shift == 0) ? (int) (dataMap() ^ bitpos)
										: bitpos(mask(keyHash, 0));

						return nodeOf0x1(mutator, (int) (0), newDataMap, getKey(1 - dataIndex),
										getValue(1 - dataIndex));
					} else {
						return copyAndRemoveValue(mutator, bitpos);
					}
				} else {
					return this;
				}
			} else if ((nodeMap() & bitpos) != 0) { // node (not value)
				final CompactMapNode<K, V> subNode = nodeAt(bitpos);
				final CompactMapNode<K, V> subNodeNew = subNode.removed(mutator, key, keyHash,
								shift + bitPartitionSize(), details, cmp);

				if (!details.isModified()) {
					return this;
				}

				switch (subNodeNew.sizePredicate()) {
				case 0: {
					throw new IllegalStateException("Sub-node must have at least one element.");
				}
				case 1: {
					// inline value (move to front)
					details.modified();
					return copyAndMigrateFromNodeToInline(mutator, bitpos, subNodeNew);
				}
				default: {
					// modify current node (set replacement node)
					return copyAndSetNode(mutator, bitpos, subNodeNew);
				}
				}
			}

			return this;
		}

		@Override

		int slotArity() {
			try {
				return unsafe.getInt(this.getClass(), globalSlotArityOffset);
			} catch (SecurityException e) {
				throw new RuntimeException(e);
			}
		}

		@Override

		public boolean equals(final Object other) {
			return equals(this, other);
		}

		@Override

		boolean containsKey(final K key, final int keyHash, final int shift) {
			final int mask = mask(keyHash, shift);
			final int bitpos = bitpos(mask);

			final int dataMap = dataMap();
			if ((dataMap & bitpos) != 0) {
				final int index = index(dataMap, mask, bitpos);
				return getKey(index).equals(key);
			}

			final int nodeMap = nodeMap();
			if ((nodeMap & bitpos) != 0) {
				final int index = index(nodeMap, mask, bitpos);
				return getNode(index).containsKey(key, keyHash, shift + bitPartitionSize());
			}

			return false;
		}

		@Override

		Object getRareKey(final int index) {
			try {
				final long[] arrayOffsets = (long[]) unsafe.getObject(this.getClass(),
								globalArrayOffsetsOffset);
				return (K) unsafe.getObject(this,
								arrayOffsets[logicalToPhysicalIndex(ContentType.RARE_KEY, index)]);
			} catch (SecurityException e) {
				throw new RuntimeException(e);
			}
		}

		@Override

		CompactMapNode<K, V> updated(final AtomicReference<Thread> mutator, final K key,
						final V val, final int keyHash, final int shift,
						final MapResult<K, V> details, final Comparator<Object> cmp) {
			final int mask = mask(keyHash, shift);
			final int bitpos = bitpos(mask);

			if ((dataMap() & bitpos) != 0) { // inplace value
				final int dataIndex = dataIndex(bitpos);
				final K currentKey = getKey(dataIndex);

				if (cmp.compare(currentKey, key) == 0) {
					final V currentVal = getValue(dataIndex);

					// update mapping
					details.updated(currentVal);
					return copyAndSetValue(mutator, bitpos, val);
				} else {
					final V currentVal = getValue(dataIndex);
					final CompactMapNode<K, V> subNodeNew = mergeTwoKeyValPairs(currentKey,
									currentVal, transformHashCode(currentKey.hashCode()), key, val,
									keyHash, shift + bitPartitionSize());

					details.modified();
					return copyAndMigrateFromInlineToNode(mutator, bitpos, subNodeNew);
				}
			} else if ((nodeMap() & bitpos) != 0) { // node (not value)
				final CompactMapNode<K, V> subNode = nodeAt(bitpos);
				final CompactMapNode<K, V> subNodeNew = subNode.updated(mutator, key, val, keyHash,
								shift + bitPartitionSize(), details, cmp);

				if (details.isModified()) {
					return copyAndSetNode(mutator, bitpos, subNodeNew);
				} else {
					return this;
				}
			} else {
				// no value
				details.modified();
				return copyAndInsertValue(mutator, bitpos, key, val);
			}
		}

		@Override

		CompactMapNode<K, V> removed(final AtomicReference<Thread> mutator, final K key,
						final int keyHash, final int shift, final MapResult<K, V> details) {
			final int mask = mask(keyHash, shift);
			final int bitpos = bitpos(mask);

			if ((dataMap() & bitpos) != 0) { // inplace value
				final int dataIndex = dataIndex(bitpos);

				if (getKey(dataIndex).equals(key)) {
					final V currentVal = getValue(dataIndex);
					details.updated(currentVal);

					if (this.payloadArity() == 2 && this.nodeArity() == 0) {
						/*
						 * Create new node with remaining pair. The new node
						 * will a) either become the new root returned, or b)
						 * unwrapped and inlined during returning.
						 */
						final int newDataMap = (shift == 0) ? (int) (dataMap() ^ bitpos)
										: bitpos(mask(keyHash, 0));

						return nodeOf0x1(mutator, (int) (0), newDataMap, getKey(1 - dataIndex),
										getValue(1 - dataIndex));
					} else {
						return copyAndRemoveValue(mutator, bitpos);
					}
				} else {
					return this;
				}
			} else if ((nodeMap() & bitpos) != 0) { // node (not value)
				final CompactMapNode<K, V> subNode = nodeAt(bitpos);
				final CompactMapNode<K, V> subNodeNew = subNode.removed(mutator, key, keyHash,
								shift + bitPartitionSize(), details);

				if (!details.isModified()) {
					return this;
				}

				switch (subNodeNew.sizePredicate()) {
				case 0: {
					throw new IllegalStateException("Sub-node must have at least one element.");
				}
				case 1: {
					// inline value (move to front)
					details.modified();
					return copyAndMigrateFromNodeToInline(mutator, bitpos, subNodeNew);
				}
				default: {
					// modify current node (set replacement node)
					return copyAndSetNode(mutator, bitpos, subNodeNew);
				}
				}
			}

			return this;
		}

	}

	private abstract static class CompactEmptyMapNode<K, V> extends CompactMapNode<K, V> {

		private CompactEmptyMapNode(final AtomicReference<Thread> mutator) {

		}

		@Override

		int nodeMap() {
			return 0;
		}

		@Override

		int dataMap() {
			return 0;
		}

	}

	private abstract static class CompactNodesOnlyMapNode<K, V> extends CompactMapNode<K, V> {

		private CompactNodesOnlyMapNode(final AtomicReference<Thread> mutator, final int nodeMap) {
			this.nodeMap = nodeMap;
		}

		@Override

		int nodeMap() {
			return nodeMap;
		}

		private final int nodeMap;

		@Override

		int dataMap() {
			return 0;
		}

	}

	private abstract static class CompactValuesOnlyMapNode<K, V> extends CompactMapNode<K, V> {

		private CompactValuesOnlyMapNode(final AtomicReference<Thread> mutator, final int dataMap) {
			this.dataMap = dataMap;
		}

		@Override

		int nodeMap() {
			return 0;
		}

		@Override

		int dataMap() {
			return dataMap;
		}

		private final int dataMap;

	}

	private abstract static class CompactMixedMapNode<K, V> extends CompactMapNode<K, V> {

		private CompactMixedMapNode(final AtomicReference<Thread> mutator, final int nodeMap,
						final int dataMap) {
			this.nodeMap = nodeMap;
			this.dataMap = dataMap;
		}

		@Override

		int nodeMap() {
			return nodeMap;
		}

		private final int nodeMap;

		@Override

		int dataMap() {
			return dataMap;
		}

		private final int dataMap;

	}

	static final class FeatureFlags {
		public static final long SUPPORTS_NOTHING = 0;
		public static final long SUPPORTS_NODES = 1 << 0;
		public static final long SUPPORTS_PAYLOAD = 1 << 1;
	}

	private abstract static class CompactHeterogeneousMapNode<K, V> extends CompactMapNode<K, V> {

		abstract int rawMap1();

		abstract int rawMap2();

		@Override

		int nodeMap() {
			return (int) (rawMap1() ^ rareMap());
		}

		@Override

		int dataMap() {
			return (int) (rawMap2() ^ rareMap());
		}

		@Override

		int rareMap() {
			return (int) (rawMap1() & rawMap2());
		}

	}

	private abstract static class CompactEmptyHeterogeneousMapNode<K, V>
					extends CompactHeterogeneousMapNode<K, V> {

		private CompactEmptyHeterogeneousMapNode(final AtomicReference<Thread> mutator) {

		}

		@Override

		int rawMap1() {
			return 0;
		}

		@Override

		int rawMap2() {
			return 0;
		}

	}

	private abstract static class CompactNodesOnlyHeterogeneousMapNode<K, V>
					extends CompactHeterogeneousMapNode<K, V> {

		private CompactNodesOnlyHeterogeneousMapNode(final AtomicReference<Thread> mutator,
						final int rawMap1) {
			this.rawMap1 = rawMap1;
		}

		@Override

		int rawMap1() {
			return rawMap1;
		}

		private final int rawMap1;

		@Override

		int rawMap2() {
			return 0;
		}

	}

	private abstract static class CompactValuesOnlyHeterogeneousMapNode<K, V>
					extends CompactHeterogeneousMapNode<K, V> {

		private CompactValuesOnlyHeterogeneousMapNode(final AtomicReference<Thread> mutator,
						final int rawMap1, final int rawMap2) {
			this.rawMap1 = rawMap1;
			this.rawMap2 = rawMap2;
		}

		@Override

		int rawMap1() {
			return rawMap1;
		}

		private final int rawMap1;

		@Override

		int rawMap2() {
			return rawMap2;
		}

		private final int rawMap2;

	}

	private abstract static class CompactMixedHeterogeneousMapNode<K, V>
					extends CompactHeterogeneousMapNode<K, V> {

		private CompactMixedHeterogeneousMapNode(final AtomicReference<Thread> mutator,
						final int rawMap1, final int rawMap2) {
			this.rawMap1 = rawMap1;
			this.rawMap2 = rawMap2;
		}

		@Override

		int rawMap1() {
			return rawMap1;
		}

		private final int rawMap1;

		@Override

		int rawMap2() {
			return rawMap2;
		}

		private final int rawMap2;

	}

	private static final class HashCollisionMapNode_Heterogeneous_BleedingEdge<K, V>
					extends CompactMapNode<K, V> {
		private final K[] keys;
		private final V[] vals;
		private final int hash;

		HashCollisionMapNode_Heterogeneous_BleedingEdge(final int hash, final K[] keys,
						final V[] vals) {
			this.keys = keys;
			this.vals = vals;
			this.hash = hash;

			assert payloadArity() >= 2;
		}

		boolean containsKey(final K key, final int keyHash, final int shift) {
			if (this.hash == keyHash) {
				for (K k : keys) {
					if (k.equals(key)) {
						return true;
					}
				}
			}
			return false;
		}

		boolean containsKey(final K key, final int keyHash, final int shift,
						final Comparator<Object> cmp) {
			if (this.hash == keyHash) {
				for (K k : keys) {
					if (cmp.compare(k, key) == 0) {
						return true;
					}
				}
			}
			return false;
		}

		Optional<V> findByKey(final K key, final int keyHash, final int shift) {
			for (int i = 0; i < keys.length; i++) {
				final K _key = keys[i];
				if (key.equals(_key)) {
					final V val = vals[i];
					return Optional.of(val);
				}
			}
			return Optional.empty();
		}

		Optional<V> findByKey(final K key, final int keyHash, final int shift,
						final Comparator<Object> cmp) {
			for (int i = 0; i < keys.length; i++) {
				final K _key = keys[i];
				if (cmp.compare(key, _key) == 0) {
					final V val = vals[i];
					return Optional.of(val);
				}
			}
			return Optional.empty();
		}

		CompactMapNode<K, V> updated(final AtomicReference<Thread> mutator, final K key,
						final V val, final int keyHash, final int shift,
						final MapResult<K, V> details) {
			assert this.hash == keyHash;

			for (int idx = 0; idx < keys.length; idx++) {
				if (keys[idx].equals(key)) {
					final V currentVal = vals[idx];

					if (currentVal.equals(val)) {
						return this;
					} else {
						// add new mapping
						final V[] src = this.vals;
						@SuppressWarnings("unchecked")
						final V[] dst = (V[]) new Object[src.length];

						// copy 'src' and set 1 element(s) at position 'idx'
						System.arraycopy(src, 0, dst, 0, src.length);
						dst[idx + 0] = val;

						final CompactMapNode<K, V> thisNew = new HashCollisionMapNode_Heterogeneous_BleedingEdge<>(
										this.hash, this.keys, dst);

						details.updated(currentVal);
						return thisNew;
					}
				}
			}

			@SuppressWarnings("unchecked")
			final K[] keysNew = (K[]) new Object[this.keys.length + 1];

			// copy 'this.keys' and insert 1 element(s) at position
			// 'keys.length'
			System.arraycopy(this.keys, 0, keysNew, 0, keys.length);
			keysNew[keys.length + 0] = key;
			System.arraycopy(this.keys, keys.length, keysNew, keys.length + 1,
							this.keys.length - keys.length);

			@SuppressWarnings("unchecked")
			final V[] valsNew = (V[]) new Object[this.vals.length + 1];

			// copy 'this.vals' and insert 1 element(s) at position
			// 'vals.length'
			System.arraycopy(this.vals, 0, valsNew, 0, vals.length);
			valsNew[vals.length + 0] = val;
			System.arraycopy(this.vals, vals.length, valsNew, vals.length + 1,
							this.vals.length - vals.length);

			details.modified();
			return new HashCollisionMapNode_Heterogeneous_BleedingEdge<>(keyHash, keysNew, valsNew);
		}

		CompactMapNode<K, V> updated(final AtomicReference<Thread> mutator, final K key,
						final V val, final int keyHash, final int shift,
						final MapResult<K, V> details, final Comparator<Object> cmp) {
			assert this.hash == keyHash;

			for (int idx = 0; idx < keys.length; idx++) {
				if (cmp.compare(keys[idx], key) == 0) {
					final V currentVal = vals[idx];

					if (cmp.compare(currentVal, val) == 0) {
						return this;
					} else {
						// add new mapping
						final V[] src = this.vals;
						@SuppressWarnings("unchecked")
						final V[] dst = (V[]) new Object[src.length];

						// copy 'src' and set 1 element(s) at position 'idx'
						System.arraycopy(src, 0, dst, 0, src.length);
						dst[idx + 0] = val;

						final CompactMapNode<K, V> thisNew = new HashCollisionMapNode_Heterogeneous_BleedingEdge<>(
										this.hash, this.keys, dst);

						details.updated(currentVal);
						return thisNew;
					}
				}
			}

			@SuppressWarnings("unchecked")
			final K[] keysNew = (K[]) new Object[this.keys.length + 1];

			// copy 'this.keys' and insert 1 element(s) at position
			// 'keys.length'
			System.arraycopy(this.keys, 0, keysNew, 0, keys.length);
			keysNew[keys.length + 0] = key;
			System.arraycopy(this.keys, keys.length, keysNew, keys.length + 1,
							this.keys.length - keys.length);

			@SuppressWarnings("unchecked")
			final V[] valsNew = (V[]) new Object[this.vals.length + 1];

			// copy 'this.vals' and insert 1 element(s) at position
			// 'vals.length'
			System.arraycopy(this.vals, 0, valsNew, 0, vals.length);
			valsNew[vals.length + 0] = val;
			System.arraycopy(this.vals, vals.length, valsNew, vals.length + 1,
							this.vals.length - vals.length);

			details.modified();
			return new HashCollisionMapNode_Heterogeneous_BleedingEdge<>(keyHash, keysNew, valsNew);
		}

		CompactMapNode<K, V> removed(final AtomicReference<Thread> mutator, final K key,
						final int keyHash, final int shift, final MapResult<K, V> details) {
			for (int idx = 0; idx < keys.length; idx++) {
				if (keys[idx].equals(key)) {
					final V currentVal = vals[idx];
					details.updated(currentVal);

					if (this.arity() == 1) {
						return EMPTY_NODE;
					} else if (this.arity() == 2) {
						/*
						 * Create root node with singleton element. This node
						 * will be a) either be the new root returned, or b)
						 * unwrapped and inlined.
						 */
						final K theOtherKey = (idx == 0) ? keys[1] : keys[0];
						final V theOtherVal = (idx == 0) ? vals[1] : vals[0];
						return EMPTY_NODE.updated(mutator, theOtherKey, theOtherVal, keyHash, 0,
										details);
					} else {
						@SuppressWarnings("unchecked")
						final K[] keysNew = (K[]) new Object[this.keys.length - 1];

						// copy 'this.keys' and remove 1 element(s) at position
						// 'idx'
						System.arraycopy(this.keys, 0, keysNew, 0, idx);
						System.arraycopy(this.keys, idx + 1, keysNew, idx,
										this.keys.length - idx - 1);

						@SuppressWarnings("unchecked")
						final V[] valsNew = (V[]) new Object[this.vals.length - 1];

						// copy 'this.vals' and remove 1 element(s) at position
						// 'idx'
						System.arraycopy(this.vals, 0, valsNew, 0, idx);
						System.arraycopy(this.vals, idx + 1, valsNew, idx,
										this.vals.length - idx - 1);

						return new HashCollisionMapNode_Heterogeneous_BleedingEdge<>(keyHash,
										keysNew, valsNew);
					}
				}
			}
			return this;
		}

		CompactMapNode<K, V> removed(final AtomicReference<Thread> mutator, final K key,
						final int keyHash, final int shift, final MapResult<K, V> details,
						final Comparator<Object> cmp) {
			for (int idx = 0; idx < keys.length; idx++) {
				if (cmp.compare(keys[idx], key) == 0) {
					final V currentVal = vals[idx];
					details.updated(currentVal);

					if (this.arity() == 1) {
						return EMPTY_NODE;
					} else if (this.arity() == 2) {
						/*
						 * Create root node with singleton element. This node
						 * will be a) either be the new root returned, or b)
						 * unwrapped and inlined.
						 */
						final K theOtherKey = (idx == 0) ? keys[1] : keys[0];
						final V theOtherVal = (idx == 0) ? vals[1] : vals[0];
						return EMPTY_NODE.updated(mutator, theOtherKey, theOtherVal, keyHash, 0,
										details, cmp);
					} else {
						@SuppressWarnings("unchecked")
						final K[] keysNew = (K[]) new Object[this.keys.length - 1];

						// copy 'this.keys' and remove 1 element(s) at position
						// 'idx'
						System.arraycopy(this.keys, 0, keysNew, 0, idx);
						System.arraycopy(this.keys, idx + 1, keysNew, idx,
										this.keys.length - idx - 1);

						@SuppressWarnings("unchecked")
						final V[] valsNew = (V[]) new Object[this.vals.length - 1];

						// copy 'this.vals' and remove 1 element(s) at position
						// 'idx'
						System.arraycopy(this.vals, 0, valsNew, 0, idx);
						System.arraycopy(this.vals, idx + 1, valsNew, idx,
										this.vals.length - idx - 1);

						return new HashCollisionMapNode_Heterogeneous_BleedingEdge<>(keyHash,
										keysNew, valsNew);
					}
				}
			}
			return this;
		}

		@Override
		boolean hasPayload() {
			return true;
		}

		@Override
		int payloadArity() {
			return keys.length;
		}

		@Override
		boolean hasNodes() {
			return false;
		}

		@Override
		int nodeArity() {
			return 0;
		}

		@Override
		int arity() {
			return payloadArity();
		}

		@Override
		byte sizePredicate() {
			return sizeMoreThanOne();
		}

		@Override
		K getKey(final int index) {
			return keys[index];
		}

		@Override
		V getValue(final int index) {
			return vals[index];
		}

		Map.Entry<K, V> getKeyValueEntry(final int index) {
			return entryOf(keys[index], vals[index]);
		}

		@Override
		public CompactMapNode<K, V> getNode(int index) {
			throw new IllegalStateException("Is leaf node.");
		}

		@Override
		Object getSlot(final int index) {
			throw new UnsupportedOperationException();
		}

		@Override
		boolean hasSlots() {
			throw new UnsupportedOperationException();
		}

		@Override
		int slotArity() {
			throw new UnsupportedOperationException();
		}

		@Override
		public int hashCode() {
			final int prime = 31;
			int result = 0;
			result = prime * result + hash;
			result = prime * result + Arrays.hashCode(keys);
			result = prime * result + Arrays.hashCode(vals);
			return result;
		}

		@Override
		public boolean equals(Object other) {
			if (null == other) {
				return false;
			}
			if (this == other) {
				return true;
			}
			if (getClass() != other.getClass()) {
				return false;
			}

			HashCollisionMapNode_Heterogeneous_BleedingEdge<?, ?> that = (HashCollisionMapNode_Heterogeneous_BleedingEdge<?, ?>) other;

			if (hash != that.hash) {
				return false;
			}

			if (arity() != that.arity()) {
				return false;
			}

			/*
			 * Linear scan for each key, because of arbitrary element order.
			 */
			outerLoop: for (int i = 0; i < that.payloadArity(); i++) {
				final Object otherKey = that.getKey(i);
				final Object otherVal = that.getValue(i);

				for (int j = 0; j < keys.length; j++) {
					final K key = keys[j];
					final V val = vals[j];

					if (key.equals(otherKey) && val.equals(otherVal)) {
						continue outerLoop;
					}
				}
				return false;
			}

			return true;
		}

		@Override
		CompactMapNode<K, V> copyAndSetValue(final AtomicReference<Thread> mutator,
						final int bitpos, final V val) {
			throw new UnsupportedOperationException();
		}

		@Override
		CompactMapNode<K, V> copyAndInsertValue(final AtomicReference<Thread> mutator,
						final int bitpos, final K key, final V val) {
			throw new UnsupportedOperationException();
		}

		@Override
		CompactMapNode<K, V> copyAndRemoveValue(final AtomicReference<Thread> mutator,
						final int bitpos) {
			throw new UnsupportedOperationException();
		}

		@Override
		CompactMapNode<K, V> copyAndSetNode(final AtomicReference<Thread> mutator, final int bitpos,
						final CompactMapNode<K, V> node) {
			throw new UnsupportedOperationException();
		}

		@Override
		CompactMapNode<K, V> copyAndMigrateFromInlineToNode(final AtomicReference<Thread> mutator,
						final int bitpos, final CompactMapNode<K, V> node) {
			throw new UnsupportedOperationException();
		}

		@Override
		CompactMapNode<K, V> copyAndMigrateFromNodeToInline(final AtomicReference<Thread> mutator,
						final int bitpos, final CompactMapNode<K, V> node) {
			throw new UnsupportedOperationException();
		}

		@Override
		int nodeMap() {
			throw new UnsupportedOperationException();
		}

		@Override
		int dataMap() {
			throw new UnsupportedOperationException();
		}

		@Override
		int rareMap() {
			throw new UnsupportedOperationException();
		}

		@Override
		int rawMap1() {
			throw new UnsupportedOperationException();
		}

		@Override
		int rawMap2() {
			throw new UnsupportedOperationException();
		}

	}

	/**
	 * Iterator skeleton that uses a fixed stack in depth.
	 */
	private static abstract class AbstractMapIterator<K, V> {

		private static final int MAX_DEPTH = 7;

		protected int currentValueCursor;
		protected int currentValueLength;
		protected AbstractMapNode<K, V> currentValueNode;

		private int currentStackLevel = -1;
		private final int[] nodeCursorsAndLengths = new int[MAX_DEPTH * 2];

		@SuppressWarnings("unchecked")
		AbstractMapNode<K, V>[] nodes = new AbstractMapNode[MAX_DEPTH];

		AbstractMapIterator(AbstractMapNode<K, V> rootNode) {
			if (rootNode.hasNodes()) {
				currentStackLevel = 0;

				nodes[0] = rootNode;
				nodeCursorsAndLengths[0] = 0;
				nodeCursorsAndLengths[1] = rootNode.nodeArity();
			}

			if (rootNode.hasPayload()) {
				currentValueNode = rootNode;
				currentValueCursor = 0;
				currentValueLength = rootNode.payloadArity();
			}
		}

		/*
		 * search for next node that contains values
		 */
		private boolean searchNextValueNode() {
			while (currentStackLevel >= 0) {
				final int currentCursorIndex = currentStackLevel * 2;
				final int currentLengthIndex = currentCursorIndex + 1;

				final int nodeCursor = nodeCursorsAndLengths[currentCursorIndex];
				final int nodeLength = nodeCursorsAndLengths[currentLengthIndex];

				if (nodeCursor < nodeLength) {
					final AbstractMapNode<K, V> nextNode = nodes[currentStackLevel]
									.getNode(nodeCursor);
					nodeCursorsAndLengths[currentCursorIndex]++;

					if (nextNode.hasNodes()) {
						/*
						 * put node on next stack level for depth-first
						 * traversal
						 */
						final int nextStackLevel = ++currentStackLevel;
						final int nextCursorIndex = nextStackLevel * 2;
						final int nextLengthIndex = nextCursorIndex + 1;

						nodes[nextStackLevel] = nextNode;
						nodeCursorsAndLengths[nextCursorIndex] = 0;
						nodeCursorsAndLengths[nextLengthIndex] = nextNode.nodeArity();
					}

					if (nextNode.hasPayload()) {
						/*
						 * found next node that contains values
						 */
						currentValueNode = nextNode;
						currentValueCursor = 0;
						currentValueLength = nextNode.payloadArity();
						return true;
					}
				} else {
					currentStackLevel--;
				}
			}

			return false;
		}

		public boolean hasNext() {
			if (currentValueCursor < currentValueLength) {
				return true;
			} else {
				return searchNextValueNode();
			}
		}

		public void remove() {
			throw new UnsupportedOperationException();
		}
	}

	protected static class MapKeyIterator<K, V> extends AbstractMapIterator<K, V>
					implements Iterator<K> {

		MapKeyIterator(AbstractMapNode<K, V> rootNode) {
			super(rootNode);
		}

		@Override
		public K next() {
			if (!hasNext()) {
				throw new NoSuchElementException();
			} else {
				return currentValueNode.getKey(currentValueCursor++);
			}
		}

	}

	protected static class MapValueIterator<K, V> extends AbstractMapIterator<K, V>
					implements Iterator<V> {

		MapValueIterator(AbstractMapNode<K, V> rootNode) {
			super(rootNode);
		}

		@Override
		public V next() {
			if (!hasNext()) {
				throw new NoSuchElementException();
			} else {
				return currentValueNode.getValue(currentValueCursor++);
			}
		}

	}

	protected static class MapEntryIterator<K, V> extends AbstractMapIterator<K, V>
					implements Iterator<Map.Entry<K, V>> {

		MapEntryIterator(AbstractMapNode<K, V> rootNode) {
			super(rootNode);
		}

		@Override
		public Map.Entry<K, V> next() {
			if (!hasNext()) {
				throw new NoSuchElementException();
			} else {
				return currentValueNode.getKeyValueEntry(currentValueCursor++);
			}
		}

	}

	/**
	 * Iterator that first iterates over inlined-values and then continues depth
	 * first recursively.
	 */
	private static class TrieMap_Heterogeneous_BleedingEdgeNodeIterator<K, V>
					implements Iterator<AbstractMapNode<K, V>> {

		final Deque<Iterator<? extends AbstractMapNode<K, V>>> nodeIteratorStack;

		TrieMap_Heterogeneous_BleedingEdgeNodeIterator(AbstractMapNode<K, V> rootNode) {
			nodeIteratorStack = new ArrayDeque<>();
			nodeIteratorStack.push(Collections.singleton(rootNode).iterator());
		}

		@Override
		public boolean hasNext() {
			while (true) {
				if (nodeIteratorStack.isEmpty()) {
					return false;
				} else {
					if (nodeIteratorStack.peek().hasNext()) {
						return true;
					} else {
						nodeIteratorStack.pop();
						continue;
					}
				}
			}
		}

		@Override
		public AbstractMapNode<K, V> next() {
			if (!hasNext()) {
				throw new NoSuchElementException();
			}

			AbstractMapNode<K, V> innerNode = nodeIteratorStack.peek().next();

			if (innerNode.hasNodes()) {
				nodeIteratorStack.push(innerNode.nodeIterator());
			}

			return innerNode;
		}

		@Override
		public void remove() {
			throw new UnsupportedOperationException();
		}
	}

	static final class TransientTrieMap_Heterogeneous_BleedingEdge<K, V>
					implements TransientMap<K, V> {
		final private AtomicReference<Thread> mutator;
		private AbstractMapNode<K, V> rootNode;
		private int hashCode;
		private int cachedSize;

		TransientTrieMap_Heterogeneous_BleedingEdge(
						TrieMap_Heterogeneous_BleedingEdge<K, V> trieMap_Heterogeneous_BleedingEdge) {
			this.mutator = new AtomicReference<Thread>(Thread.currentThread());
			this.rootNode = trieMap_Heterogeneous_BleedingEdge.rootNode;
			this.hashCode = trieMap_Heterogeneous_BleedingEdge.hashCode;
			this.cachedSize = trieMap_Heterogeneous_BleedingEdge.cachedSize;
			if (DEBUG) {
				assert checkHashCodeAndSize(hashCode, cachedSize);
			}
		}

		private boolean checkHashCodeAndSize(final int targetHash, final int targetSize) {
			int hash = 0;
			int size = 0;

			for (Iterator<Map.Entry<K, V>> it = entryIterator(); it.hasNext();) {
				final Map.Entry<K, V> entry = it.next();
				final K key = entry.getKey();
				final V val = entry.getValue();

				hash += key.hashCode() ^ val.hashCode();
				size += 1;
			}

			return hash == targetHash && size == targetSize;
		}

		public V put(final K key, final V val) {
			throw new UnsupportedOperationException();
		}

		public void putAll(final Map<? extends K, ? extends V> m) {
			throw new UnsupportedOperationException();
		}

		public void clear() {
			throw new UnsupportedOperationException();
		}

		public V remove(final Object key) {
			throw new UnsupportedOperationException();
		}

		public boolean containsKey(final Object o) {
			try {
				@SuppressWarnings("unchecked")
				final K key = (K) o;
				return rootNode.containsKey(key, transformHashCode(key.hashCode()), 0);
			} catch (ClassCastException unused) {
				return false;
			}
		}

		public boolean containsKeyEquivalent(final Object o, final Comparator<Object> cmp) {
			try {
				@SuppressWarnings("unchecked")
				final K key = (K) o;
				return rootNode.containsKey(key, transformHashCode(key.hashCode()), 0, cmp);
			} catch (ClassCastException unused) {
				return false;
			}
		}

		public boolean containsValue(final Object o) {
			for (Iterator<V> iterator = valueIterator(); iterator.hasNext();) {
				if (iterator.next().equals(o)) {
					return true;
				}
			}
			return false;
		}

		public boolean containsValueEquivalent(final Object o, final Comparator<Object> cmp) {
			for (Iterator<V> iterator = valueIterator(); iterator.hasNext();) {
				if (cmp.compare(iterator.next(), o) == 0) {
					return true;
				}
			}
			return false;
		}

		public V get(final Object o) {
			try {
				@SuppressWarnings("unchecked")
				final K key = (K) o;
				final Optional<V> result = rootNode.findByKey(key,
								transformHashCode(key.hashCode()), 0);

				if (result.isPresent()) {
					return result.get();
				} else {
					return null;
				}
			} catch (ClassCastException unused) {
				return null;
			}
		}

		public V getEquivalent(final Object o, final Comparator<Object> cmp) {
			try {
				@SuppressWarnings("unchecked")
				final K key = (K) o;
				final Optional<V> result = rootNode.findByKey(key,
								transformHashCode(key.hashCode()), 0, cmp);

				if (result.isPresent()) {
					return result.get();
				} else {
					return null;
				}
			} catch (ClassCastException unused) {
				return null;
			}
		}

		public V __put(final K key, final V val) {
			if (mutator.get() == null) {
				throw new IllegalStateException("Transient already frozen.");
			}

			final int keyHash = key.hashCode();
			final MapResult<K, V> details = MapResult.unchanged();

			final CompactMapNode<K, V> newRootNode = rootNode.updated(mutator, key, val,
							transformHashCode(keyHash), 0, details);

			if (details.isModified()) {
				if (details.hasReplacedValue()) {
					final V old = details.getReplacedValue();

					final int valHashOld = old.hashCode();
					final int valHashNew = val.hashCode();

					rootNode = newRootNode;
					hashCode = hashCode + (keyHash ^ valHashNew) - (keyHash ^ valHashOld);

					if (DEBUG) {
						assert checkHashCodeAndSize(hashCode, cachedSize);
					}
					return details.getReplacedValue();
				} else {
					final int valHashNew = val.hashCode();
					rootNode = newRootNode;
					hashCode += (keyHash ^ valHashNew);
					cachedSize += 1;

					if (DEBUG) {
						assert checkHashCodeAndSize(hashCode, cachedSize);
					}
					return null;
				}
			}

			if (DEBUG) {
				assert checkHashCodeAndSize(hashCode, cachedSize);
			}
			return null;
		}

		public V __putEquivalent(final K key, final V val, final Comparator<Object> cmp) {
			if (mutator.get() == null) {
				throw new IllegalStateException("Transient already frozen.");
			}

			final int keyHash = key.hashCode();
			final MapResult<K, V> details = MapResult.unchanged();

			final CompactMapNode<K, V> newRootNode = rootNode.updated(mutator, key, val,
							transformHashCode(keyHash), 0, details, cmp);

			if (details.isModified()) {
				if (details.hasReplacedValue()) {
					final V old = details.getReplacedValue();

					final int valHashOld = old.hashCode();
					final int valHashNew = val.hashCode();

					rootNode = newRootNode;
					hashCode = hashCode + (keyHash ^ valHashNew) - (keyHash ^ valHashOld);

					if (DEBUG) {
						assert checkHashCodeAndSize(hashCode, cachedSize);
					}
					return details.getReplacedValue();
				} else {
					final int valHashNew = val.hashCode();
					rootNode = newRootNode;
					hashCode += (keyHash ^ valHashNew);
					cachedSize += 1;

					if (DEBUG) {
						assert checkHashCodeAndSize(hashCode, cachedSize);
					}
					return null;
				}
			}

			if (DEBUG) {
				assert checkHashCodeAndSize(hashCode, cachedSize);
			}
			return null;
		}

		public boolean __putAll(final Map<? extends K, ? extends V> map) {
			boolean modified = false;

			for (Map.Entry<? extends K, ? extends V> entry : map.entrySet()) {
				final boolean isPresent = this.containsKey(entry.getKey());
				final V replaced = this.__put(entry.getKey(), entry.getValue());

				if (!isPresent || replaced != null) {
					modified = true;
				}
			}

			return modified;
		}

		public boolean __putAllEquivalent(final Map<? extends K, ? extends V> map,
						final Comparator<Object> cmp) {
			boolean modified = false;

			for (Map.Entry<? extends K, ? extends V> entry : map.entrySet()) {
				final boolean isPresent = this.containsKeyEquivalent(entry.getKey(), cmp);
				final V replaced = this.__putEquivalent(entry.getKey(), entry.getValue(), cmp);

				if (!isPresent || replaced != null) {
					modified = true;
				}
			}

			return modified;
		}

		public V __remove(final K key) {
			if (mutator.get() == null) {
				throw new IllegalStateException("Transient already frozen.");
			}

			final int keyHash = key.hashCode();
			final MapResult<K, V> details = MapResult.unchanged();

			final CompactMapNode<K, V> newRootNode = rootNode.removed(mutator, key,
							transformHashCode(keyHash), 0, details);

			if (details.isModified()) {
				assert details.hasReplacedValue();
				final int valHash = details.getReplacedValue().hashCode();

				rootNode = newRootNode;
				hashCode = hashCode - (keyHash ^ valHash);
				cachedSize = cachedSize - 1;

				if (DEBUG) {
					assert checkHashCodeAndSize(hashCode, cachedSize);
				}
				return details.getReplacedValue();
			}

			if (DEBUG) {
				assert checkHashCodeAndSize(hashCode, cachedSize);
			}

			return null;
		}

		public V __removeEquivalent(final K key, final Comparator<Object> cmp) {
			if (mutator.get() == null) {
				throw new IllegalStateException("Transient already frozen.");
			}

			final int keyHash = key.hashCode();
			final MapResult<K, V> details = MapResult.unchanged();

			final CompactMapNode<K, V> newRootNode = rootNode.removed(mutator, key,
							transformHashCode(keyHash), 0, details, cmp);

			if (details.isModified()) {
				assert details.hasReplacedValue();
				final int valHash = details.getReplacedValue().hashCode();

				rootNode = newRootNode;
				hashCode = hashCode - (keyHash ^ valHash);
				cachedSize = cachedSize - 1;

				if (DEBUG) {
					assert checkHashCodeAndSize(hashCode, cachedSize);
				}
				return details.getReplacedValue();
			}

			if (DEBUG) {
				assert checkHashCodeAndSize(hashCode, cachedSize);
			}

			return null;
		}

		public int size() {
			return cachedSize;
		}

		public boolean isEmpty() {
			return cachedSize == 0;
		}

		public Iterator<K> keyIterator() {
			return new TransientMapKeyIterator<>(this);
		}

		public Iterator<V> valueIterator() {
			return new TransientMapValueIterator<>(this);
		}

		public Iterator<Map.Entry<K, V>> entryIterator() {
			return new TransientMapEntryIterator<>(this);
		}

		public static class TransientMapKeyIterator<K, V> extends MapKeyIterator<K, V> {
			final TransientTrieMap_Heterogeneous_BleedingEdge<K, V> collection;
			K lastKey;

			public TransientMapKeyIterator(
							final TransientTrieMap_Heterogeneous_BleedingEdge<K, V> collection) {
				super(collection.rootNode);
				this.collection = collection;
			}

			public K next() {
				return lastKey = super.next();
			}

			public void remove() {
				// TODO: test removal at iteration rigorously
				collection.__remove(lastKey);
			}
		}

		public static class TransientMapValueIterator<K, V> extends MapValueIterator<K, V> {
			final TransientTrieMap_Heterogeneous_BleedingEdge<K, V> collection;

			public TransientMapValueIterator(
							final TransientTrieMap_Heterogeneous_BleedingEdge<K, V> collection) {
				super(collection.rootNode);
				this.collection = collection;
			}

			public V next() {
				return super.next();
			}

			public void remove() {
				throw new UnsupportedOperationException();
			}
		}

		public static class TransientMapEntryIterator<K, V> extends MapEntryIterator<K, V> {
			final TransientTrieMap_Heterogeneous_BleedingEdge<K, V> collection;

			public TransientMapEntryIterator(
							final TransientTrieMap_Heterogeneous_BleedingEdge<K, V> collection) {
				super(collection.rootNode);
				this.collection = collection;
			}

			public Map.Entry<K, V> next() {
				return super.next();
			}

			public void remove() {
				throw new UnsupportedOperationException();
			}
		}

		@Override
		public Set<K> keySet() {
			Set<K> keySet = null;

			if (keySet == null) {
				keySet = new AbstractSet<K>() {
					@Override
					public Iterator<K> iterator() {
						return TransientTrieMap_Heterogeneous_BleedingEdge.this.keyIterator();
					}

					@Override
					public int size() {
						return TransientTrieMap_Heterogeneous_BleedingEdge.this.size();
					}

					@Override
					public boolean isEmpty() {
						return TransientTrieMap_Heterogeneous_BleedingEdge.this.isEmpty();
					}

					@Override
					public void clear() {
						TransientTrieMap_Heterogeneous_BleedingEdge.this.clear();
					}

					@Override
					public boolean contains(Object k) {
						return TransientTrieMap_Heterogeneous_BleedingEdge.this.containsKey(k);
					}
				};
			}

			return keySet;
		}

		@Override
		public Collection<V> values() {
			Collection<V> values = null;

			if (values == null) {
				values = new AbstractCollection<V>() {
					@Override
					public Iterator<V> iterator() {
						return TransientTrieMap_Heterogeneous_BleedingEdge.this.valueIterator();
					}

					@Override
					public int size() {
						return TransientTrieMap_Heterogeneous_BleedingEdge.this.size();
					}

					@Override
					public boolean isEmpty() {
						return TransientTrieMap_Heterogeneous_BleedingEdge.this.isEmpty();
					}

					@Override
					public void clear() {
						TransientTrieMap_Heterogeneous_BleedingEdge.this.clear();
					}

					@Override
					public boolean contains(Object v) {
						return TransientTrieMap_Heterogeneous_BleedingEdge.this.containsValue(v);
					}
				};
			}

			return values;
		}

		@Override
		public Set<java.util.Map.Entry<K, V>> entrySet() {
			Set<java.util.Map.Entry<K, V>> entrySet = null;

			if (entrySet == null) {
				entrySet = new AbstractSet<java.util.Map.Entry<K, V>>() {
					@Override
					public Iterator<java.util.Map.Entry<K, V>> iterator() {
						return new Iterator<Map.Entry<K, V>>() {
							private final Iterator<Map.Entry<K, V>> i = entryIterator();

							@Override
							public boolean hasNext() {
								return i.hasNext();
							}

							@Override
							public Map.Entry<K, V> next() {
								return i.next();
							}

							@Override
							public void remove() {
								i.remove();
							}
						};
					}

					@Override
					public int size() {
						return TransientTrieMap_Heterogeneous_BleedingEdge.this.size();
					}

					@Override
					public boolean isEmpty() {
						return TransientTrieMap_Heterogeneous_BleedingEdge.this.isEmpty();
					}

					@Override
					public void clear() {
						TransientTrieMap_Heterogeneous_BleedingEdge.this.clear();
					}

					@Override
					public boolean contains(Object k) {
						return TransientTrieMap_Heterogeneous_BleedingEdge.this.containsKey(k);
					}
				};
			}

			return entrySet;
		}

		@Override
		public boolean equals(final Object other) {
			if (other == this) {
				return true;
			}
			if (other == null) {
				return false;
			}

			if (other instanceof TransientTrieMap_Heterogeneous_BleedingEdge) {
				TransientTrieMap_Heterogeneous_BleedingEdge<?, ?> that = (TransientTrieMap_Heterogeneous_BleedingEdge<?, ?>) other;

				if (this.cachedSize != that.cachedSize) {
					return false;
				}

				if (this.hashCode != that.hashCode) {
					return false;
				}

				return rootNode.equals(that.rootNode);
			} else if (other instanceof Map) {
				Map that = (Map) other;

				if (this.size() != that.size())
					return false;

				for (@SuppressWarnings("unchecked")
				Iterator<Map.Entry> it = that.entrySet().iterator(); it.hasNext();) {
					Map.Entry entry = it.next();

					try {
						@SuppressWarnings("unchecked")
						final K key = (K) entry.getKey();
						final Optional<V> result = rootNode.findByKey(key,
										transformHashCode(key.hashCode()), 0);

						if (!result.isPresent()) {
							return false;
						} else {
							@SuppressWarnings("unchecked")
							final V val = (V) entry.getValue();

							if (!result.get().equals(val)) {
								return false;
							}
						}
					} catch (ClassCastException unused) {
						return false;
					}
				}

				return true;
			}

			return false;
		}

		@Override
		public int hashCode() {
			return hashCode;
		}

		@Override
		public ImmutableMap<K, V> freeze() {
			if (mutator.get() == null) {
				throw new IllegalStateException("Transient already frozen.");
			}

			mutator.set(null);
			return new TrieMap_Heterogeneous_BleedingEdge<K, V>(rootNode, hashCode, cachedSize);
		}
	}

	private static class Map0To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To0Node_Heterogeneous_BleedingEdge.class, new String[] {});

		static final int nodeArity = 0;

		static final int payloadArity = 0;

		static final int slotArity = 0;

		private Map0To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap) {
			super(mutator, nodeMap, dataMap);
		}

	}

	private static class Map0To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To1Node_Heterogeneous_BleedingEdge.class, new String[] { "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 0;

		static final int slotArity = 1;

		private final Object slot0;

		private Map0To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
		}

	}

	private static class Map0To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 0;

		static final int slotArity = 2;

		private final Object slot0;

		private final Object slot1;

		private Map0To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map0To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 0;

		static final int slotArity = 3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map0To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map0To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 0;

		static final int slotArity = 4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map0To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map0To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 0;

		static final int slotArity = 5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map0To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map0To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 0;

		static final int slotArity = 6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map0To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map0To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To7Node_Heterogeneous_BleedingEdge.class, new String[] { "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 0;

		static final int slotArity = 7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map0To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map0To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 0;

		static final int slotArity = 8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map0To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map0To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 0;

		static final int slotArity = 9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map0To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map0To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 0;

		static final int slotArity = 10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map0To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map0To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 0;

		static final int slotArity = 11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map0To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map0To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 0;

		static final int slotArity = 12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map0To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map0To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 0;

		static final int slotArity = 13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map0To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map0To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 0;

		static final int slotArity = 14;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map0To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map0To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 0;

		static final int slotArity = 15;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map0To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map0To16Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To16Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15" });

		static final int nodeArity = 16;

		static final int payloadArity = 0;

		static final int slotArity = 16;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private Map0To16Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
		}

	}

	private static class Map0To17Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To17Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16" });

		static final int nodeArity = 17;

		static final int payloadArity = 0;

		static final int slotArity = 17;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private Map0To17Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
		}

	}

	private static class Map0To18Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To18Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17" });

		static final int nodeArity = 18;

		static final int payloadArity = 0;

		static final int slotArity = 18;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private Map0To18Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
		}

	}

	private static class Map0To19Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To19Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18" });

		static final int nodeArity = 19;

		static final int payloadArity = 0;

		static final int slotArity = 19;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private Map0To19Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
		}

	}

	private static class Map0To20Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To20Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19" });

		static final int nodeArity = 20;

		static final int payloadArity = 0;

		static final int slotArity = 20;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private Map0To20Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
		}

	}

	private static class Map0To21Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To21Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19", "slot20" });

		static final int nodeArity = 21;

		static final int payloadArity = 0;

		static final int slotArity = 21;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private Map0To21Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
		}

	}

	private static class Map0To22Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To22Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19", "slot20", "slot21" });

		static final int nodeArity = 22;

		static final int payloadArity = 0;

		static final int slotArity = 22;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private Map0To22Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
		}

	}

	private static class Map0To23Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To23Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19", "slot20", "slot21", "slot22" });

		static final int nodeArity = 23;

		static final int payloadArity = 0;

		static final int slotArity = 23;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private Map0To23Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
		}

	}

	private static class Map0To24Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To24Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19", "slot20", "slot21", "slot22",
										"slot23" });

		static final int nodeArity = 24;

		static final int payloadArity = 0;

		static final int slotArity = 24;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private Map0To24Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
		}

	}

	private static class Map0To25Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To25Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19", "slot20", "slot21", "slot22", "slot23",
										"slot24" });

		static final int nodeArity = 25;

		static final int payloadArity = 0;

		static final int slotArity = 25;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private Map0To25Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23, final Object slot24) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
		}

	}

	private static class Map0To26Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To26Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19", "slot20", "slot21", "slot22", "slot23",
										"slot24", "slot25" });

		static final int nodeArity = 26;

		static final int payloadArity = 0;

		static final int slotArity = 26;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private Map0To26Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23, final Object slot24,
						final Object slot25) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
		}

	}

	private static class Map0To27Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To27Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19", "slot20", "slot21", "slot22", "slot23",
										"slot24", "slot25", "slot26" });

		static final int nodeArity = 27;

		static final int payloadArity = 0;

		static final int slotArity = 27;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private Map0To27Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23, final Object slot24,
						final Object slot25, final Object slot26) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
		}

	}

	private static class Map0To28Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To28Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19", "slot20", "slot21", "slot22", "slot23",
										"slot24", "slot25", "slot26", "slot27" });

		static final int nodeArity = 28;

		static final int payloadArity = 0;

		static final int slotArity = 28;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private final Object slot27;

		private Map0To28Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23, final Object slot24,
						final Object slot25, final Object slot26, final Object slot27) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
			this.slot27 = slot27;
		}

	}

	private static class Map0To29Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To29Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19", "slot20", "slot21", "slot22", "slot23",
										"slot24", "slot25", "slot26", "slot27", "slot28" });

		static final int nodeArity = 29;

		static final int payloadArity = 0;

		static final int slotArity = 29;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private final Object slot27;

		private final Object slot28;

		private Map0To29Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23, final Object slot24,
						final Object slot25, final Object slot26, final Object slot27,
						final Object slot28) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
			this.slot27 = slot27;
			this.slot28 = slot28;
		}

	}

	private static class Map0To30Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To30Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19", "slot20", "slot21", "slot22", "slot23",
										"slot24", "slot25", "slot26", "slot27", "slot28",
										"slot29" });

		static final int nodeArity = 30;

		static final int payloadArity = 0;

		static final int slotArity = 30;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private final Object slot27;

		private final Object slot28;

		private final Object slot29;

		private Map0To30Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23, final Object slot24,
						final Object slot25, final Object slot26, final Object slot27,
						final Object slot28, final Object slot29) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
			this.slot27 = slot27;
			this.slot28 = slot28;
			this.slot29 = slot29;
		}

	}

	private static class Map0To31Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To31Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19", "slot20", "slot21", "slot22", "slot23",
										"slot24", "slot25", "slot26", "slot27", "slot28", "slot29",
										"slot30" });

		static final int nodeArity = 31;

		static final int payloadArity = 0;

		static final int slotArity = 31;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private final Object slot27;

		private final Object slot28;

		private final Object slot29;

		private final Object slot30;

		private Map0To31Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23, final Object slot24,
						final Object slot25, final Object slot26, final Object slot27,
						final Object slot28, final Object slot29, final Object slot30) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
			this.slot27 = slot27;
			this.slot28 = slot28;
			this.slot29 = slot29;
			this.slot30 = slot30;
		}

	}

	private static class Map0To32Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map0To32Node_Heterogeneous_BleedingEdge.class,
						new String[] { "slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19", "slot20", "slot21", "slot22", "slot23",
										"slot24", "slot25", "slot26", "slot27", "slot28", "slot29",
										"slot30", "slot31" });

		static final int nodeArity = 32;

		static final int payloadArity = 0;

		static final int slotArity = 32;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private final Object slot27;

		private final Object slot28;

		private final Object slot29;

		private final Object slot30;

		private final Object slot31;

		private Map0To32Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23, final Object slot24,
						final Object slot25, final Object slot26, final Object slot27,
						final Object slot28, final Object slot29, final Object slot30,
						final Object slot31) {
			super(mutator, nodeMap, dataMap);
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
			this.slot27 = slot27;
			this.slot28 = slot28;
			this.slot29 = slot29;
			this.slot30 = slot30;
			this.slot31 = slot31;
		}

	}

	private static class Map1To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1" });

		static final int nodeArity = 0;

		static final int payloadArity = 1;

		static final int slotArity = 2;

		private final K key1;

		private final V val1;

		private Map1To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
		}

	}

	private static class Map1To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 1;

		static final int slotArity = 3;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private Map1To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
		}

	}

	private static class Map1To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 1;

		static final int slotArity = 4;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private Map1To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map1To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 1;

		static final int slotArity = 5;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map1To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map1To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 1;

		static final int slotArity = 6;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map1To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map1To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To5Node_Heterogeneous_BleedingEdge.class, new String[] { "key1", "val1",
										"slot0", "slot1", "slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 1;

		static final int slotArity = 7;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map1To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map1To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To6Node_Heterogeneous_BleedingEdge.class, new String[] { "key1", "val1",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 1;

		static final int slotArity = 8;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map1To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map1To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 1;

		static final int slotArity = 9;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map1To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map1To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 1;

		static final int slotArity = 10;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map1To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map1To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 1;

		static final int slotArity = 11;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map1To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map1To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 1;

		static final int slotArity = 12;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map1To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map1To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 1;

		static final int slotArity = 13;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map1To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map1To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 1;

		static final int slotArity = 14;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map1To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map1To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 1;

		static final int slotArity = 15;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map1To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map1To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 1;

		static final int slotArity = 16;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map1To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map1To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 1;

		static final int slotArity = 17;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map1To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map1To16Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To16Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15" });

		static final int nodeArity = 16;

		static final int payloadArity = 1;

		static final int slotArity = 18;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private Map1To16Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
		}

	}

	private static class Map1To17Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To17Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15",
										"slot16" });

		static final int nodeArity = 17;

		static final int payloadArity = 1;

		static final int slotArity = 19;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private Map1To17Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
		}

	}

	private static class Map1To18Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To18Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17" });

		static final int nodeArity = 18;

		static final int payloadArity = 1;

		static final int slotArity = 20;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private Map1To18Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
		}

	}

	private static class Map1To19Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To19Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18" });

		static final int nodeArity = 19;

		static final int payloadArity = 1;

		static final int slotArity = 21;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private Map1To19Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
		}

	}

	private static class Map1To20Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To20Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19" });

		static final int nodeArity = 20;

		static final int payloadArity = 1;

		static final int slotArity = 22;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private Map1To20Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
		}

	}

	private static class Map1To21Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To21Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20" });

		static final int nodeArity = 21;

		static final int payloadArity = 1;

		static final int slotArity = 23;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private Map1To21Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
		}

	}

	private static class Map1To22Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To22Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21" });

		static final int nodeArity = 22;

		static final int payloadArity = 1;

		static final int slotArity = 24;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private Map1To22Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
		}

	}

	private static class Map1To23Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To23Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21",
										"slot22" });

		static final int nodeArity = 23;

		static final int payloadArity = 1;

		static final int slotArity = 25;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private Map1To23Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
		}

	}

	private static class Map1To24Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To24Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21", "slot22",
										"slot23" });

		static final int nodeArity = 24;

		static final int payloadArity = 1;

		static final int slotArity = 26;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private Map1To24Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22, final Object slot23) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
		}

	}

	private static class Map1To25Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To25Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21", "slot22",
										"slot23", "slot24" });

		static final int nodeArity = 25;

		static final int payloadArity = 1;

		static final int slotArity = 27;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private Map1To25Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22, final Object slot23,
						final Object slot24) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
		}

	}

	private static class Map1To26Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To26Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21", "slot22",
										"slot23", "slot24", "slot25" });

		static final int nodeArity = 26;

		static final int payloadArity = 1;

		static final int slotArity = 28;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private Map1To26Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22, final Object slot23,
						final Object slot24, final Object slot25) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
		}

	}

	private static class Map1To27Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To27Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21", "slot22",
										"slot23", "slot24", "slot25", "slot26" });

		static final int nodeArity = 27;

		static final int payloadArity = 1;

		static final int slotArity = 29;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private Map1To27Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22, final Object slot23,
						final Object slot24, final Object slot25, final Object slot26) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
		}

	}

	private static class Map1To28Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To28Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21", "slot22",
										"slot23", "slot24", "slot25", "slot26", "slot27" });

		static final int nodeArity = 28;

		static final int payloadArity = 1;

		static final int slotArity = 30;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private final Object slot27;

		private Map1To28Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22, final Object slot23,
						final Object slot24, final Object slot25, final Object slot26,
						final Object slot27) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
			this.slot27 = slot27;
		}

	}

	private static class Map1To29Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To29Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21", "slot22",
										"slot23", "slot24", "slot25", "slot26", "slot27",
										"slot28" });

		static final int nodeArity = 29;

		static final int payloadArity = 1;

		static final int slotArity = 31;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private final Object slot27;

		private final Object slot28;

		private Map1To29Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22, final Object slot23,
						final Object slot24, final Object slot25, final Object slot26,
						final Object slot27, final Object slot28) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
			this.slot27 = slot27;
			this.slot28 = slot28;
		}

	}

	private static class Map1To30Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To30Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21", "slot22",
										"slot23", "slot24", "slot25", "slot26", "slot27", "slot28",
										"slot29" });

		static final int nodeArity = 30;

		static final int payloadArity = 1;

		static final int slotArity = 32;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private final Object slot27;

		private final Object slot28;

		private final Object slot29;

		private Map1To30Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22, final Object slot23,
						final Object slot24, final Object slot25, final Object slot26,
						final Object slot27, final Object slot28, final Object slot29) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
			this.slot27 = slot27;
			this.slot28 = slot28;
			this.slot29 = slot29;
		}

	}

	private static class Map1To31Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map1To31Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21", "slot22",
										"slot23", "slot24", "slot25", "slot26", "slot27", "slot28",
										"slot29", "slot30" });

		static final int nodeArity = 31;

		static final int payloadArity = 1;

		static final int slotArity = 33;

		private final K key1;

		private final V val1;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private final Object slot27;

		private final Object slot28;

		private final Object slot29;

		private final Object slot30;

		private Map1To31Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22, final Object slot23,
						final Object slot24, final Object slot25, final Object slot26,
						final Object slot27, final Object slot28, final Object slot29,
						final Object slot30) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
			this.slot27 = slot27;
			this.slot28 = slot28;
			this.slot29 = slot29;
			this.slot30 = slot30;
		}

	}

	private static class Map2To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2" });

		static final int nodeArity = 0;

		static final int payloadArity = 2;

		static final int slotArity = 4;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private Map2To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
		}

	}

	private static class Map2To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 2;

		static final int slotArity = 5;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private Map2To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
		}

	}

	private static class Map2To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 2;

		static final int slotArity = 6;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private Map2To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map2To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 2;

		static final int slotArity = 7;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map2To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map2To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To4Node_Heterogeneous_BleedingEdge.class, new String[] { "key1", "val1",
										"key2", "val2", "slot0", "slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 2;

		static final int slotArity = 8;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map2To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map2To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 2;

		static final int slotArity = 9;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map2To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map2To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 2;

		static final int slotArity = 10;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map2To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map2To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 2;

		static final int slotArity = 11;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map2To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map2To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 2;

		static final int slotArity = 12;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map2To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map2To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 2;

		static final int slotArity = 13;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map2To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map2To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 2;

		static final int slotArity = 14;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map2To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map2To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 2;

		static final int slotArity = 15;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map2To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map2To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 2;

		static final int slotArity = 16;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map2To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map2To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 2;

		static final int slotArity = 17;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map2To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map2To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 2;

		static final int slotArity = 18;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map2To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map2To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13",
										"slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 2;

		static final int slotArity = 19;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map2To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map2To16Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To16Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15" });

		static final int nodeArity = 16;

		static final int payloadArity = 2;

		static final int slotArity = 20;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private Map2To16Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
		}

	}

	private static class Map2To17Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To17Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16" });

		static final int nodeArity = 17;

		static final int payloadArity = 2;

		static final int slotArity = 21;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private Map2To17Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
		}

	}

	private static class Map2To18Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To18Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17" });

		static final int nodeArity = 18;

		static final int payloadArity = 2;

		static final int slotArity = 22;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private Map2To18Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
		}

	}

	private static class Map2To19Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To19Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18" });

		static final int nodeArity = 19;

		static final int payloadArity = 2;

		static final int slotArity = 23;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private Map2To19Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
		}

	}

	private static class Map2To20Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To20Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18", "slot19" });

		static final int nodeArity = 20;

		static final int payloadArity = 2;

		static final int slotArity = 24;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private Map2To20Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
		}

	}

	private static class Map2To21Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To21Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18", "slot19",
										"slot20" });

		static final int nodeArity = 21;

		static final int payloadArity = 2;

		static final int slotArity = 25;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private Map2To21Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19,
						final Object slot20) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
		}

	}

	private static class Map2To22Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To22Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18", "slot19", "slot20",
										"slot21" });

		static final int nodeArity = 22;

		static final int payloadArity = 2;

		static final int slotArity = 26;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private Map2To22Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19,
						final Object slot20, final Object slot21) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
		}

	}

	private static class Map2To23Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To23Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18", "slot19", "slot20",
										"slot21", "slot22" });

		static final int nodeArity = 23;

		static final int payloadArity = 2;

		static final int slotArity = 27;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private Map2To23Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19,
						final Object slot20, final Object slot21, final Object slot22) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
		}

	}

	private static class Map2To24Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To24Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18", "slot19", "slot20",
										"slot21", "slot22", "slot23" });

		static final int nodeArity = 24;

		static final int payloadArity = 2;

		static final int slotArity = 28;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private Map2To24Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19,
						final Object slot20, final Object slot21, final Object slot22,
						final Object slot23) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
		}

	}

	private static class Map2To25Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To25Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18", "slot19", "slot20",
										"slot21", "slot22", "slot23", "slot24" });

		static final int nodeArity = 25;

		static final int payloadArity = 2;

		static final int slotArity = 29;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private Map2To25Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19,
						final Object slot20, final Object slot21, final Object slot22,
						final Object slot23, final Object slot24) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
		}

	}

	private static class Map2To26Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To26Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18", "slot19", "slot20",
										"slot21", "slot22", "slot23", "slot24", "slot25" });

		static final int nodeArity = 26;

		static final int payloadArity = 2;

		static final int slotArity = 30;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private Map2To26Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19,
						final Object slot20, final Object slot21, final Object slot22,
						final Object slot23, final Object slot24, final Object slot25) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
		}

	}

	private static class Map2To27Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To27Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18", "slot19", "slot20",
										"slot21", "slot22", "slot23", "slot24", "slot25",
										"slot26" });

		static final int nodeArity = 27;

		static final int payloadArity = 2;

		static final int slotArity = 31;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private Map2To27Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19,
						final Object slot20, final Object slot21, final Object slot22,
						final Object slot23, final Object slot24, final Object slot25,
						final Object slot26) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
		}

	}

	private static class Map2To28Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To28Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18", "slot19", "slot20",
										"slot21", "slot22", "slot23", "slot24", "slot25", "slot26",
										"slot27" });

		static final int nodeArity = 28;

		static final int payloadArity = 2;

		static final int slotArity = 32;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private final Object slot27;

		private Map2To28Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19,
						final Object slot20, final Object slot21, final Object slot22,
						final Object slot23, final Object slot24, final Object slot25,
						final Object slot26, final Object slot27) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
			this.slot27 = slot27;
		}

	}

	private static class Map2To29Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To29Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18", "slot19", "slot20",
										"slot21", "slot22", "slot23", "slot24", "slot25", "slot26",
										"slot27", "slot28" });

		static final int nodeArity = 29;

		static final int payloadArity = 2;

		static final int slotArity = 33;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private final Object slot27;

		private final Object slot28;

		private Map2To29Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19,
						final Object slot20, final Object slot21, final Object slot22,
						final Object slot23, final Object slot24, final Object slot25,
						final Object slot26, final Object slot27, final Object slot28) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
			this.slot27 = slot27;
			this.slot28 = slot28;
		}

	}

	private static class Map2To30Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map2To30Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18", "slot19", "slot20",
										"slot21", "slot22", "slot23", "slot24", "slot25", "slot26",
										"slot27", "slot28", "slot29" });

		static final int nodeArity = 30;

		static final int payloadArity = 2;

		static final int slotArity = 34;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private final Object slot27;

		private final Object slot28;

		private final Object slot29;

		private Map2To30Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19,
						final Object slot20, final Object slot21, final Object slot22,
						final Object slot23, final Object slot24, final Object slot25,
						final Object slot26, final Object slot27, final Object slot28,
						final Object slot29) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
			this.slot27 = slot27;
			this.slot28 = slot28;
			this.slot29 = slot29;
		}

	}

	private static class Map3To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3" });

		static final int nodeArity = 0;

		static final int payloadArity = 3;

		static final int slotArity = 6;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private Map3To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
		}

	}

	private static class Map3To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 3;

		static final int slotArity = 7;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private Map3To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3,
						final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
		}

	}

	private static class Map3To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To2Node_Heterogeneous_BleedingEdge.class, new String[] { "key1", "val1",
										"key2", "val2", "key3", "val3", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 3;

		static final int slotArity = 8;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private Map3To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map3To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 3;

		static final int slotArity = 9;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map3To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map3To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 3;

		static final int slotArity = 10;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map3To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map3To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 3;

		static final int slotArity = 11;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map3To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map3To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 3;

		static final int slotArity = 12;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map3To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map3To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 3;

		static final int slotArity = 13;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map3To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map3To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 3;

		static final int slotArity = 14;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map3To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map3To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 3;

		static final int slotArity = 15;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map3To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map3To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 3;

		static final int slotArity = 16;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map3To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map3To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 3;

		static final int slotArity = 17;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map3To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map3To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 3;

		static final int slotArity = 18;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map3To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map3To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 3;

		static final int slotArity = 19;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map3To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map3To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 3;

		static final int slotArity = 20;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map3To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map3To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 3;

		static final int slotArity = 21;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map3To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map3To16Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To16Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15" });

		static final int nodeArity = 16;

		static final int payloadArity = 3;

		static final int slotArity = 22;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private Map3To16Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
		}

	}

	private static class Map3To17Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To17Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16" });

		static final int nodeArity = 17;

		static final int payloadArity = 3;

		static final int slotArity = 23;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private Map3To17Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
		}

	}

	private static class Map3To18Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To18Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17" });

		static final int nodeArity = 18;

		static final int payloadArity = 3;

		static final int slotArity = 24;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private Map3To18Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
		}

	}

	private static class Map3To19Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To19Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18" });

		static final int nodeArity = 19;

		static final int payloadArity = 3;

		static final int slotArity = 25;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private Map3To19Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
		}

	}

	private static class Map3To20Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To20Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17", "slot18",
										"slot19" });

		static final int nodeArity = 20;

		static final int payloadArity = 3;

		static final int slotArity = 26;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private Map3To20Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
		}

	}

	private static class Map3To21Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To21Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17", "slot18",
										"slot19", "slot20" });

		static final int nodeArity = 21;

		static final int payloadArity = 3;

		static final int slotArity = 27;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private Map3To21Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
		}

	}

	private static class Map3To22Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To22Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17", "slot18",
										"slot19", "slot20", "slot21" });

		static final int nodeArity = 22;

		static final int payloadArity = 3;

		static final int slotArity = 28;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private Map3To22Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
		}

	}

	private static class Map3To23Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To23Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17", "slot18",
										"slot19", "slot20", "slot21", "slot22" });

		static final int nodeArity = 23;

		static final int payloadArity = 3;

		static final int slotArity = 29;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private Map3To23Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
		}

	}

	private static class Map3To24Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To24Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17", "slot18",
										"slot19", "slot20", "slot21", "slot22", "slot23" });

		static final int nodeArity = 24;

		static final int payloadArity = 3;

		static final int slotArity = 30;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private Map3To24Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
		}

	}

	private static class Map3To25Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To25Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17", "slot18",
										"slot19", "slot20", "slot21", "slot22", "slot23",
										"slot24" });

		static final int nodeArity = 25;

		static final int payloadArity = 3;

		static final int slotArity = 31;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private Map3To25Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23, final Object slot24) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
		}

	}

	private static class Map3To26Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To26Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17", "slot18",
										"slot19", "slot20", "slot21", "slot22", "slot23", "slot24",
										"slot25" });

		static final int nodeArity = 26;

		static final int payloadArity = 3;

		static final int slotArity = 32;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private Map3To26Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23, final Object slot24,
						final Object slot25) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
		}

	}

	private static class Map3To27Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To27Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17", "slot18",
										"slot19", "slot20", "slot21", "slot22", "slot23", "slot24",
										"slot25", "slot26" });

		static final int nodeArity = 27;

		static final int payloadArity = 3;

		static final int slotArity = 33;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private Map3To27Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23, final Object slot24,
						final Object slot25, final Object slot26) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
		}

	}

	private static class Map3To28Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To28Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17", "slot18",
										"slot19", "slot20", "slot21", "slot22", "slot23", "slot24",
										"slot25", "slot26", "slot27" });

		static final int nodeArity = 28;

		static final int payloadArity = 3;

		static final int slotArity = 34;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private final Object slot27;

		private Map3To28Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23, final Object slot24,
						final Object slot25, final Object slot26, final Object slot27) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
			this.slot27 = slot27;
		}

	}

	private static class Map3To29Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map3To29Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17", "slot18",
										"slot19", "slot20", "slot21", "slot22", "slot23", "slot24",
										"slot25", "slot26", "slot27", "slot28" });

		static final int nodeArity = 29;

		static final int payloadArity = 3;

		static final int slotArity = 35;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private final Object slot27;

		private final Object slot28;

		private Map3To29Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23, final Object slot24,
						final Object slot25, final Object slot26, final Object slot27,
						final Object slot28) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
			this.slot27 = slot27;
			this.slot28 = slot28;
		}

	}

	private static class Map4To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To0Node_Heterogeneous_BleedingEdge.class, new String[] { "key1", "val1",
										"key2", "val2", "key3", "val3", "key4", "val4" });

		static final int nodeArity = 0;

		static final int payloadArity = 4;

		static final int slotArity = 8;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private Map4To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
		}

	}

	private static class Map4To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To1Node_Heterogeneous_BleedingEdge.class, new String[] { "key1", "val1",
										"key2", "val2", "key3", "val3", "key4", "val4", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 4;

		static final int slotArity = 9;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private Map4To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
		}

	}

	private static class Map4To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 4;

		static final int slotArity = 10;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private Map4To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map4To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 4;

		static final int slotArity = 11;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map4To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map4To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 4;

		static final int slotArity = 12;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map4To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map4To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 4;

		static final int slotArity = 13;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map4To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map4To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 4;

		static final int slotArity = 14;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map4To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map4To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 4;

		static final int slotArity = 15;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map4To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map4To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 4;

		static final int slotArity = 16;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map4To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map4To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 4;

		static final int slotArity = 17;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map4To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map4To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 4;

		static final int slotArity = 18;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map4To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map4To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 4;

		static final int slotArity = 19;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map4To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map4To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 4;

		static final int slotArity = 20;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map4To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map4To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 4;

		static final int slotArity = 21;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map4To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map4To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 4;

		static final int slotArity = 22;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map4To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map4To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 4;

		static final int slotArity = 23;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map4To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map4To16Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To16Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15" });

		static final int nodeArity = 16;

		static final int payloadArity = 4;

		static final int slotArity = 24;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private Map4To16Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
		}

	}

	private static class Map4To17Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To17Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15",
										"slot16" });

		static final int nodeArity = 17;

		static final int payloadArity = 4;

		static final int slotArity = 25;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private Map4To17Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
		}

	}

	private static class Map4To18Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To18Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17" });

		static final int nodeArity = 18;

		static final int payloadArity = 4;

		static final int slotArity = 26;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private Map4To18Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
		}

	}

	private static class Map4To19Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To19Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18" });

		static final int nodeArity = 19;

		static final int payloadArity = 4;

		static final int slotArity = 27;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private Map4To19Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
		}

	}

	private static class Map4To20Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To20Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19" });

		static final int nodeArity = 20;

		static final int payloadArity = 4;

		static final int slotArity = 28;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private Map4To20Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
		}

	}

	private static class Map4To21Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To21Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20" });

		static final int nodeArity = 21;

		static final int payloadArity = 4;

		static final int slotArity = 29;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private Map4To21Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
		}

	}

	private static class Map4To22Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To22Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21" });

		static final int nodeArity = 22;

		static final int payloadArity = 4;

		static final int slotArity = 30;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private Map4To22Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
		}

	}

	private static class Map4To23Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To23Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21",
										"slot22" });

		static final int nodeArity = 23;

		static final int payloadArity = 4;

		static final int slotArity = 31;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private Map4To23Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
		}

	}

	private static class Map4To24Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To24Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21", "slot22",
										"slot23" });

		static final int nodeArity = 24;

		static final int payloadArity = 4;

		static final int slotArity = 32;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private Map4To24Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22, final Object slot23) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
		}

	}

	private static class Map4To25Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To25Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21", "slot22",
										"slot23", "slot24" });

		static final int nodeArity = 25;

		static final int payloadArity = 4;

		static final int slotArity = 33;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private Map4To25Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22, final Object slot23,
						final Object slot24) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
		}

	}

	private static class Map4To26Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To26Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21", "slot22",
										"slot23", "slot24", "slot25" });

		static final int nodeArity = 26;

		static final int payloadArity = 4;

		static final int slotArity = 34;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private Map4To26Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22, final Object slot23,
						final Object slot24, final Object slot25) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
		}

	}

	private static class Map4To27Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To27Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21", "slot22",
										"slot23", "slot24", "slot25", "slot26" });

		static final int nodeArity = 27;

		static final int payloadArity = 4;

		static final int slotArity = 35;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private Map4To27Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22, final Object slot23,
						final Object slot24, final Object slot25, final Object slot26) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
		}

	}

	private static class Map4To28Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map4To28Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21", "slot22",
										"slot23", "slot24", "slot25", "slot26", "slot27" });

		static final int nodeArity = 28;

		static final int payloadArity = 4;

		static final int slotArity = 36;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private final Object slot27;

		private Map4To28Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22, final Object slot23,
						final Object slot24, final Object slot25, final Object slot26,
						final Object slot27) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
			this.slot27 = slot27;
		}

	}

	private static class Map5To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5" });

		static final int nodeArity = 0;

		static final int payloadArity = 5;

		static final int slotArity = 10;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private Map5To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
		}

	}

	private static class Map5To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 5;

		static final int slotArity = 11;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private Map5To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
		}

	}

	private static class Map5To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 5;

		static final int slotArity = 12;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private Map5To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map5To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 5;

		static final int slotArity = 13;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map5To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map5To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2",
										"slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 5;

		static final int slotArity = 14;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map5To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map5To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 5;

		static final int slotArity = 15;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map5To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map5To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 5;

		static final int slotArity = 16;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map5To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map5To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 5;

		static final int slotArity = 17;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map5To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map5To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 5;

		static final int slotArity = 18;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map5To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map5To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 5;

		static final int slotArity = 19;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map5To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map5To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 5;

		static final int slotArity = 20;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map5To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map5To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9",
										"slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 5;

		static final int slotArity = 21;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map5To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map5To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9",
										"slot10", "slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 5;

		static final int slotArity = 22;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map5To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map5To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9",
										"slot10", "slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 5;

		static final int slotArity = 23;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map5To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map5To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9",
										"slot10", "slot11", "slot12", "slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 5;

		static final int slotArity = 24;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map5To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map5To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9",
										"slot10", "slot11", "slot12", "slot13", "slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 5;

		static final int slotArity = 25;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map5To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map5To16Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To16Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9",
										"slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15" });

		static final int nodeArity = 16;

		static final int payloadArity = 5;

		static final int slotArity = 26;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private Map5To16Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
		}

	}

	private static class Map5To17Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To17Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9",
										"slot10", "slot11", "slot12", "slot13", "slot14", "slot15",
										"slot16" });

		static final int nodeArity = 17;

		static final int payloadArity = 5;

		static final int slotArity = 27;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private Map5To17Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
		}

	}

	private static class Map5To18Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To18Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9",
										"slot10", "slot11", "slot12", "slot13", "slot14", "slot15",
										"slot16", "slot17" });

		static final int nodeArity = 18;

		static final int payloadArity = 5;

		static final int slotArity = 28;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private Map5To18Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
		}

	}

	private static class Map5To19Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To19Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9",
										"slot10", "slot11", "slot12", "slot13", "slot14", "slot15",
										"slot16", "slot17", "slot18" });

		static final int nodeArity = 19;

		static final int payloadArity = 5;

		static final int slotArity = 29;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private Map5To19Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
		}

	}

	private static class Map5To20Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To20Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9",
										"slot10", "slot11", "slot12", "slot13", "slot14", "slot15",
										"slot16", "slot17", "slot18", "slot19" });

		static final int nodeArity = 20;

		static final int payloadArity = 5;

		static final int slotArity = 30;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private Map5To20Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
		}

	}

	private static class Map5To21Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To21Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9",
										"slot10", "slot11", "slot12", "slot13", "slot14", "slot15",
										"slot16", "slot17", "slot18", "slot19", "slot20" });

		static final int nodeArity = 21;

		static final int payloadArity = 5;

		static final int slotArity = 31;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private Map5To21Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
		}

	}

	private static class Map5To22Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To22Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9",
										"slot10", "slot11", "slot12", "slot13", "slot14", "slot15",
										"slot16", "slot17", "slot18", "slot19", "slot20",
										"slot21" });

		static final int nodeArity = 22;

		static final int payloadArity = 5;

		static final int slotArity = 32;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private Map5To22Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
		}

	}

	private static class Map5To23Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To23Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9",
										"slot10", "slot11", "slot12", "slot13", "slot14", "slot15",
										"slot16", "slot17", "slot18", "slot19", "slot20", "slot21",
										"slot22" });

		static final int nodeArity = 23;

		static final int payloadArity = 5;

		static final int slotArity = 33;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private Map5To23Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
		}

	}

	private static class Map5To24Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To24Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9",
										"slot10", "slot11", "slot12", "slot13", "slot14", "slot15",
										"slot16", "slot17", "slot18", "slot19", "slot20", "slot21",
										"slot22", "slot23" });

		static final int nodeArity = 24;

		static final int payloadArity = 5;

		static final int slotArity = 34;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private Map5To24Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
		}

	}

	private static class Map5To25Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To25Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9",
										"slot10", "slot11", "slot12", "slot13", "slot14", "slot15",
										"slot16", "slot17", "slot18", "slot19", "slot20", "slot21",
										"slot22", "slot23", "slot24" });

		static final int nodeArity = 25;

		static final int payloadArity = 5;

		static final int slotArity = 35;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private Map5To25Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23, final Object slot24) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
		}

	}

	private static class Map5To26Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To26Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9",
										"slot10", "slot11", "slot12", "slot13", "slot14", "slot15",
										"slot16", "slot17", "slot18", "slot19", "slot20", "slot21",
										"slot22", "slot23", "slot24", "slot25" });

		static final int nodeArity = 26;

		static final int payloadArity = 5;

		static final int slotArity = 36;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private Map5To26Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23, final Object slot24,
						final Object slot25) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
		}

	}

	private static class Map5To27Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map5To27Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "slot0", "slot1", "slot2", "slot3",
										"slot4", "slot5", "slot6", "slot7", "slot8", "slot9",
										"slot10", "slot11", "slot12", "slot13", "slot14", "slot15",
										"slot16", "slot17", "slot18", "slot19", "slot20", "slot21",
										"slot22", "slot23", "slot24", "slot25", "slot26" });

		static final int nodeArity = 27;

		static final int payloadArity = 5;

		static final int slotArity = 37;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private final Object slot26;

		private Map5To27Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23, final Object slot24,
						final Object slot25, final Object slot26) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
			this.slot26 = slot26;
		}

	}

	private static class Map6To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6" });

		static final int nodeArity = 0;

		static final int payloadArity = 6;

		static final int slotArity = 12;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private Map6To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
		}

	}

	private static class Map6To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 6;

		static final int slotArity = 13;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private Map6To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
		}

	}

	private static class Map6To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 6;

		static final int slotArity = 14;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private Map6To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map6To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 6;

		static final int slotArity = 15;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map6To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map6To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 6;

		static final int slotArity = 16;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map6To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map6To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 6;

		static final int slotArity = 17;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map6To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map6To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 6;

		static final int slotArity = 18;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map6To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map6To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 6;

		static final int slotArity = 19;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map6To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map6To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 6;

		static final int slotArity = 20;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map6To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map6To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 6;

		static final int slotArity = 21;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map6To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map6To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8", "slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 6;

		static final int slotArity = 22;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map6To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map6To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8", "slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 6;

		static final int slotArity = 23;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map6To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map6To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8", "slot9", "slot10", "slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 6;

		static final int slotArity = 24;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map6To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map6To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8", "slot9", "slot10", "slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 6;

		static final int slotArity = 25;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map6To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map6To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8", "slot9", "slot10", "slot11", "slot12", "slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 6;

		static final int slotArity = 26;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map6To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map6To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8", "slot9", "slot10", "slot11", "slot12", "slot13",
										"slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 6;

		static final int slotArity = 27;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map6To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map6To16Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To16Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8", "slot9", "slot10", "slot11", "slot12", "slot13",
										"slot14", "slot15" });

		static final int nodeArity = 16;

		static final int payloadArity = 6;

		static final int slotArity = 28;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private Map6To16Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
		}

	}

	private static class Map6To17Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To17Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8", "slot9", "slot10", "slot11", "slot12", "slot13",
										"slot14", "slot15", "slot16" });

		static final int nodeArity = 17;

		static final int payloadArity = 6;

		static final int slotArity = 29;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private Map6To17Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
		}

	}

	private static class Map6To18Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To18Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8", "slot9", "slot10", "slot11", "slot12", "slot13",
										"slot14", "slot15", "slot16", "slot17" });

		static final int nodeArity = 18;

		static final int payloadArity = 6;

		static final int slotArity = 30;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private Map6To18Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
		}

	}

	private static class Map6To19Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To19Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8", "slot9", "slot10", "slot11", "slot12", "slot13",
										"slot14", "slot15", "slot16", "slot17", "slot18" });

		static final int nodeArity = 19;

		static final int payloadArity = 6;

		static final int slotArity = 31;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private Map6To19Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
		}

	}

	private static class Map6To20Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To20Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8", "slot9", "slot10", "slot11", "slot12", "slot13",
										"slot14", "slot15", "slot16", "slot17", "slot18",
										"slot19" });

		static final int nodeArity = 20;

		static final int payloadArity = 6;

		static final int slotArity = 32;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private Map6To20Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
		}

	}

	private static class Map6To21Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To21Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8", "slot9", "slot10", "slot11", "slot12", "slot13",
										"slot14", "slot15", "slot16", "slot17", "slot18", "slot19",
										"slot20" });

		static final int nodeArity = 21;

		static final int payloadArity = 6;

		static final int slotArity = 33;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private Map6To21Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
		}

	}

	private static class Map6To22Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To22Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8", "slot9", "slot10", "slot11", "slot12", "slot13",
										"slot14", "slot15", "slot16", "slot17", "slot18", "slot19",
										"slot20", "slot21" });

		static final int nodeArity = 22;

		static final int payloadArity = 6;

		static final int slotArity = 34;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private Map6To22Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
		}

	}

	private static class Map6To23Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To23Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8", "slot9", "slot10", "slot11", "slot12", "slot13",
										"slot14", "slot15", "slot16", "slot17", "slot18", "slot19",
										"slot20", "slot21", "slot22" });

		static final int nodeArity = 23;

		static final int payloadArity = 6;

		static final int slotArity = 35;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private Map6To23Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
		}

	}

	private static class Map6To24Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To24Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8", "slot9", "slot10", "slot11", "slot12", "slot13",
										"slot14", "slot15", "slot16", "slot17", "slot18", "slot19",
										"slot20", "slot21", "slot22", "slot23" });

		static final int nodeArity = 24;

		static final int payloadArity = 6;

		static final int slotArity = 36;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private Map6To24Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22, final Object slot23) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
		}

	}

	private static class Map6To25Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To25Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8", "slot9", "slot10", "slot11", "slot12", "slot13",
										"slot14", "slot15", "slot16", "slot17", "slot18", "slot19",
										"slot20", "slot21", "slot22", "slot23", "slot24" });

		static final int nodeArity = 25;

		static final int payloadArity = 6;

		static final int slotArity = 37;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private Map6To25Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22, final Object slot23,
						final Object slot24) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
		}

	}

	private static class Map6To26Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map6To26Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "slot0", "slot1",
										"slot2", "slot3", "slot4", "slot5", "slot6", "slot7",
										"slot8", "slot9", "slot10", "slot11", "slot12", "slot13",
										"slot14", "slot15", "slot16", "slot17", "slot18", "slot19",
										"slot20", "slot21", "slot22", "slot23", "slot24",
										"slot25" });

		static final int nodeArity = 26;

		static final int payloadArity = 6;

		static final int slotArity = 38;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private final Object slot25;

		private Map6To26Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22, final Object slot23,
						final Object slot24, final Object slot25) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
			this.slot25 = slot25;
		}

	}

	private static class Map7To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7" });

		static final int nodeArity = 0;

		static final int payloadArity = 7;

		static final int slotArity = 14;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private Map7To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
		}

	}

	private static class Map7To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 7;

		static final int slotArity = 15;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private Map7To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
		}

	}

	private static class Map7To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 7;

		static final int slotArity = 16;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private Map7To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map7To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 7;

		static final int slotArity = 17;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map7To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map7To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 7;

		static final int slotArity = 18;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map7To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map7To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 7;

		static final int slotArity = 19;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map7To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map7To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 7;

		static final int slotArity = 20;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map7To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map7To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 7;

		static final int slotArity = 21;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map7To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map7To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 7;

		static final int slotArity = 22;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map7To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map7To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 7;

		static final int slotArity = 23;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map7To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map7To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 7;

		static final int slotArity = 24;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map7To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map7To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 7;

		static final int slotArity = 25;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map7To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map7To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 7;

		static final int slotArity = 26;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map7To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map7To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 7;

		static final int slotArity = 27;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map7To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map7To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 7;

		static final int slotArity = 28;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map7To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map7To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 7;

		static final int slotArity = 29;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map7To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map7To16Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To16Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15" });

		static final int nodeArity = 16;

		static final int payloadArity = 7;

		static final int slotArity = 30;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private Map7To16Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
		}

	}

	private static class Map7To17Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To17Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16" });

		static final int nodeArity = 17;

		static final int payloadArity = 7;

		static final int slotArity = 31;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private Map7To17Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
		}

	}

	private static class Map7To18Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To18Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17" });

		static final int nodeArity = 18;

		static final int payloadArity = 7;

		static final int slotArity = 32;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private Map7To18Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
		}

	}

	private static class Map7To19Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To19Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18" });

		static final int nodeArity = 19;

		static final int payloadArity = 7;

		static final int slotArity = 33;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private Map7To19Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
		}

	}

	private static class Map7To20Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To20Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19" });

		static final int nodeArity = 20;

		static final int payloadArity = 7;

		static final int slotArity = 34;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private Map7To20Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
		}

	}

	private static class Map7To21Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To21Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19", "slot20" });

		static final int nodeArity = 21;

		static final int payloadArity = 7;

		static final int slotArity = 35;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private Map7To21Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19,
						final Object slot20) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
		}

	}

	private static class Map7To22Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To22Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19", "slot20", "slot21" });

		static final int nodeArity = 22;

		static final int payloadArity = 7;

		static final int slotArity = 36;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private Map7To22Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19,
						final Object slot20, final Object slot21) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
		}

	}

	private static class Map7To23Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To23Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19", "slot20", "slot21", "slot22" });

		static final int nodeArity = 23;

		static final int payloadArity = 7;

		static final int slotArity = 37;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private Map7To23Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19,
						final Object slot20, final Object slot21, final Object slot22) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
		}

	}

	private static class Map7To24Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To24Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19", "slot20", "slot21", "slot22",
										"slot23" });

		static final int nodeArity = 24;

		static final int payloadArity = 7;

		static final int slotArity = 38;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private Map7To24Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19,
						final Object slot20, final Object slot21, final Object slot22,
						final Object slot23) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
		}

	}

	private static class Map7To25Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map7To25Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"slot0", "slot1", "slot2", "slot3", "slot4", "slot5",
										"slot6", "slot7", "slot8", "slot9", "slot10", "slot11",
										"slot12", "slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18", "slot19", "slot20", "slot21", "slot22", "slot23",
										"slot24" });

		static final int nodeArity = 25;

		static final int payloadArity = 7;

		static final int slotArity = 39;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private final Object slot24;

		private Map7To25Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19,
						final Object slot20, final Object slot21, final Object slot22,
						final Object slot23, final Object slot24) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
			this.slot24 = slot24;
		}

	}

	private static class Map8To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8" });

		static final int nodeArity = 0;

		static final int payloadArity = 8;

		static final int slotArity = 16;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private Map8To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
		}

	}

	private static class Map8To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 8;

		static final int slotArity = 17;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private Map8To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8,
						final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
		}

	}

	private static class Map8To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 8;

		static final int slotArity = 18;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private Map8To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map8To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 8;

		static final int slotArity = 19;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map8To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map8To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 8;

		static final int slotArity = 20;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map8To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map8To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3",
										"slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 8;

		static final int slotArity = 21;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map8To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map8To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 8;

		static final int slotArity = 22;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map8To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map8To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 8;

		static final int slotArity = 23;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map8To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map8To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 8;

		static final int slotArity = 24;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map8To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map8To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 8;

		static final int slotArity = 25;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map8To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map8To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 8;

		static final int slotArity = 26;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map8To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map8To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 8;

		static final int slotArity = 27;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map8To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map8To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 8;

		static final int slotArity = 28;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map8To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map8To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 8;

		static final int slotArity = 29;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map8To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map8To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 8;

		static final int slotArity = 30;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map8To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map8To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 8;

		static final int slotArity = 31;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map8To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map8To16Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To16Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15" });

		static final int nodeArity = 16;

		static final int payloadArity = 8;

		static final int slotArity = 32;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private Map8To16Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
		}

	}

	private static class Map8To17Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To17Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15",
										"slot16" });

		static final int nodeArity = 17;

		static final int payloadArity = 8;

		static final int slotArity = 33;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private Map8To17Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
		}

	}

	private static class Map8To18Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To18Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17" });

		static final int nodeArity = 18;

		static final int payloadArity = 8;

		static final int slotArity = 34;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private Map8To18Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
		}

	}

	private static class Map8To19Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To19Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18" });

		static final int nodeArity = 19;

		static final int payloadArity = 8;

		static final int slotArity = 35;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private Map8To19Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
		}

	}

	private static class Map8To20Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To20Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19" });

		static final int nodeArity = 20;

		static final int payloadArity = 8;

		static final int slotArity = 36;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private Map8To20Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
		}

	}

	private static class Map8To21Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To21Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20" });

		static final int nodeArity = 21;

		static final int payloadArity = 8;

		static final int slotArity = 37;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private Map8To21Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
		}

	}

	private static class Map8To22Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To22Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21" });

		static final int nodeArity = 22;

		static final int payloadArity = 8;

		static final int slotArity = 38;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private Map8To22Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
		}

	}

	private static class Map8To23Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To23Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21",
										"slot22" });

		static final int nodeArity = 23;

		static final int payloadArity = 8;

		static final int slotArity = 39;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private Map8To23Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
		}

	}

	private static class Map8To24Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map8To24Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20", "slot21", "slot22",
										"slot23" });

		static final int nodeArity = 24;

		static final int payloadArity = 8;

		static final int slotArity = 40;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private final Object slot23;

		private Map8To24Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21,
						final Object slot22, final Object slot23) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
			this.slot23 = slot23;
		}

	}

	private static class Map9To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9" });

		static final int nodeArity = 0;

		static final int payloadArity = 9;

		static final int slotArity = 18;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private Map9To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
		}

	}

	private static class Map9To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 9;

		static final int slotArity = 19;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private Map9To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
		}

	}

	private static class Map9To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 9;

		static final int slotArity = 20;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private Map9To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map9To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1",
										"slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 9;

		static final int slotArity = 21;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map9To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map9To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 9;

		static final int slotArity = 22;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map9To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map9To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 9;

		static final int slotArity = 23;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map9To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map9To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 9;

		static final int slotArity = 24;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map9To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map9To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 9;

		static final int slotArity = 25;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map9To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map9To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 9;

		static final int slotArity = 26;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map9To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map9To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 9;

		static final int slotArity = 27;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map9To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map9To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 9;

		static final int slotArity = 28;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map9To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map9To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 9;

		static final int slotArity = 29;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map9To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map9To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 9;

		static final int slotArity = 30;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map9To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map9To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 9;

		static final int slotArity = 31;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map9To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map9To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 9;

		static final int slotArity = 32;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map9To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map9To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13",
										"slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 9;

		static final int slotArity = 33;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map9To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map9To16Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To16Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15" });

		static final int nodeArity = 16;

		static final int payloadArity = 9;

		static final int slotArity = 34;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private Map9To16Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
		}

	}

	private static class Map9To17Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To17Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16" });

		static final int nodeArity = 17;

		static final int payloadArity = 9;

		static final int slotArity = 35;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private Map9To17Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
		}

	}

	private static class Map9To18Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To18Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17" });

		static final int nodeArity = 18;

		static final int payloadArity = 9;

		static final int slotArity = 36;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private Map9To18Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
		}

	}

	private static class Map9To19Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To19Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18" });

		static final int nodeArity = 19;

		static final int payloadArity = 9;

		static final int slotArity = 37;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private Map9To19Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
		}

	}

	private static class Map9To20Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To20Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18", "slot19" });

		static final int nodeArity = 20;

		static final int payloadArity = 9;

		static final int slotArity = 38;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private Map9To20Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
		}

	}

	private static class Map9To21Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To21Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18", "slot19",
										"slot20" });

		static final int nodeArity = 21;

		static final int payloadArity = 9;

		static final int slotArity = 39;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private Map9To21Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
		}

	}

	private static class Map9To22Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To22Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18", "slot19", "slot20",
										"slot21" });

		static final int nodeArity = 22;

		static final int payloadArity = 9;

		static final int slotArity = 40;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private Map9To22Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
		}

	}

	private static class Map9To23Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map9To23Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18", "slot19", "slot20",
										"slot21", "slot22" });

		static final int nodeArity = 23;

		static final int payloadArity = 9;

		static final int slotArity = 41;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private final Object slot22;

		private Map9To23Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20,
						final Object slot21, final Object slot22) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
			this.slot22 = slot22;
		}

	}

	private static class Map10To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10" });

		static final int nodeArity = 0;

		static final int payloadArity = 10;

		static final int slotArity = 20;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private Map10To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
		}

	}

	private static class Map10To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10",
										"slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 10;

		static final int slotArity = 21;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private Map10To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
		}

	}

	private static class Map10To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 10;

		static final int slotArity = 22;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private Map10To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map10To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 10;

		static final int slotArity = 23;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map10To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map10To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 10;

		static final int slotArity = 24;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map10To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map10To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 10;

		static final int slotArity = 25;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map10To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map10To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 10;

		static final int slotArity = 26;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map10To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map10To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 10;

		static final int slotArity = 27;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map10To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map10To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 10;

		static final int slotArity = 28;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map10To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map10To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 10;

		static final int slotArity = 29;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map10To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map10To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 10;

		static final int slotArity = 30;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map10To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map10To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 10;

		static final int slotArity = 31;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map10To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map10To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 10;

		static final int slotArity = 32;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map10To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map10To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 10;

		static final int slotArity = 33;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map10To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map10To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 10;

		static final int slotArity = 34;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map10To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map10To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 10;

		static final int slotArity = 35;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map10To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map10To16Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To16Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15" });

		static final int nodeArity = 16;

		static final int payloadArity = 10;

		static final int slotArity = 36;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private Map10To16Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
		}

	}

	private static class Map10To17Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To17Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16" });

		static final int nodeArity = 17;

		static final int payloadArity = 10;

		static final int slotArity = 37;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private Map10To17Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
		}

	}

	private static class Map10To18Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To18Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17" });

		static final int nodeArity = 18;

		static final int payloadArity = 10;

		static final int slotArity = 38;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private Map10To18Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
		}

	}

	private static class Map10To19Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To19Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18" });

		static final int nodeArity = 19;

		static final int payloadArity = 10;

		static final int slotArity = 39;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private Map10To19Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
		}

	}

	private static class Map10To20Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To20Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17", "slot18",
										"slot19" });

		static final int nodeArity = 20;

		static final int payloadArity = 10;

		static final int slotArity = 40;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private Map10To20Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
		}

	}

	private static class Map10To21Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To21Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17", "slot18",
										"slot19", "slot20" });

		static final int nodeArity = 21;

		static final int payloadArity = 10;

		static final int slotArity = 41;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private Map10To21Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
		}

	}

	private static class Map10To22Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map10To22Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17", "slot18",
										"slot19", "slot20", "slot21" });

		static final int nodeArity = 22;

		static final int payloadArity = 10;

		static final int slotArity = 42;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private final Object slot21;

		private Map10To22Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16, final Object slot17, final Object slot18,
						final Object slot19, final Object slot20, final Object slot21) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
			this.slot21 = slot21;
		}

	}

	private static class Map11To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11" });

		static final int nodeArity = 0;

		static final int payloadArity = 11;

		static final int slotArity = 22;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private Map11To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
		}

	}

	private static class Map11To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 11;

		static final int slotArity = 23;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private Map11To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
		}

	}

	private static class Map11To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 11;

		static final int slotArity = 24;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private Map11To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map11To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 11;

		static final int slotArity = 25;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map11To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map11To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 11;

		static final int slotArity = 26;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map11To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map11To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 11;

		static final int slotArity = 27;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map11To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map11To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 11;

		static final int slotArity = 28;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map11To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map11To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 11;

		static final int slotArity = 29;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map11To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map11To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 11;

		static final int slotArity = 30;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map11To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map11To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 11;

		static final int slotArity = 31;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map11To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map11To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 11;

		static final int slotArity = 32;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map11To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map11To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 11;

		static final int slotArity = 33;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map11To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map11To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 11;

		static final int slotArity = 34;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map11To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map11To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 11;

		static final int slotArity = 35;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map11To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map11To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 11;

		static final int slotArity = 36;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map11To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map11To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 11;

		static final int slotArity = 37;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map11To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map11To16Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To16Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15" });

		static final int nodeArity = 16;

		static final int payloadArity = 11;

		static final int slotArity = 38;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private Map11To16Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
		}

	}

	private static class Map11To17Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To17Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15",
										"slot16" });

		static final int nodeArity = 17;

		static final int payloadArity = 11;

		static final int slotArity = 39;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private Map11To17Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
		}

	}

	private static class Map11To18Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To18Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17" });

		static final int nodeArity = 18;

		static final int payloadArity = 11;

		static final int slotArity = 40;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private Map11To18Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
		}

	}

	private static class Map11To19Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To19Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18" });

		static final int nodeArity = 19;

		static final int payloadArity = 11;

		static final int slotArity = 41;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private Map11To19Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
		}

	}

	private static class Map11To20Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To20Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19" });

		static final int nodeArity = 20;

		static final int payloadArity = 11;

		static final int slotArity = 42;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private Map11To20Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
		}

	}

	private static class Map11To21Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map11To21Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17", "slot18", "slot19", "slot20" });

		static final int nodeArity = 21;

		static final int payloadArity = 11;

		static final int slotArity = 43;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private final Object slot20;

		private Map11To21Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18, final Object slot19, final Object slot20) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
			this.slot20 = slot20;
		}

	}

	private static class Map12To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12" });

		static final int nodeArity = 0;

		static final int payloadArity = 12;

		static final int slotArity = 24;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private Map12To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
		}

	}

	private static class Map12To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 12;

		static final int slotArity = 25;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private Map12To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
		}

	}

	private static class Map12To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 12;

		static final int slotArity = 26;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private Map12To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map12To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 12;

		static final int slotArity = 27;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map12To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map12To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2",
										"slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 12;

		static final int slotArity = 28;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map12To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map12To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2",
										"slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 12;

		static final int slotArity = 29;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map12To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map12To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 12;

		static final int slotArity = 30;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map12To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map12To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 12;

		static final int slotArity = 31;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map12To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map12To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 12;

		static final int slotArity = 32;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map12To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map12To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 12;

		static final int slotArity = 33;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map12To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map12To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 12;

		static final int slotArity = 34;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map12To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map12To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 12;

		static final int slotArity = 35;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map12To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map12To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 12;

		static final int slotArity = 36;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map12To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map12To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 12;

		static final int slotArity = 37;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map12To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map12To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 12;

		static final int slotArity = 38;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map12To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map12To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13",
										"slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 12;

		static final int slotArity = 39;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map12To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map12To16Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To16Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15" });

		static final int nodeArity = 16;

		static final int payloadArity = 12;

		static final int slotArity = 40;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private Map12To16Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
		}

	}

	private static class Map12To17Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To17Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16" });

		static final int nodeArity = 17;

		static final int payloadArity = 12;

		static final int slotArity = 41;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private Map12To17Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
		}

	}

	private static class Map12To18Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To18Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17" });

		static final int nodeArity = 18;

		static final int payloadArity = 12;

		static final int slotArity = 42;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private Map12To18Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
		}

	}

	private static class Map12To19Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To19Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18" });

		static final int nodeArity = 19;

		static final int payloadArity = 12;

		static final int slotArity = 43;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private Map12To19Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
		}

	}

	private static class Map12To20Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map12To20Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16", "slot17", "slot18", "slot19" });

		static final int nodeArity = 20;

		static final int payloadArity = 12;

		static final int slotArity = 44;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private final Object slot19;

		private Map12To20Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14, final Object slot15, final Object slot16,
						final Object slot17, final Object slot18, final Object slot19) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
			this.slot19 = slot19;
		}

	}

	private static class Map13To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13" });

		static final int nodeArity = 0;

		static final int payloadArity = 13;

		static final int slotArity = 26;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private Map13To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
		}

	}

	private static class Map13To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 13;

		static final int slotArity = 27;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private Map13To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
		}

	}

	private static class Map13To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 13;

		static final int slotArity = 28;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private Map13To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map13To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 13;

		static final int slotArity = 29;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map13To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map13To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 13;

		static final int slotArity = 30;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map13To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map13To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1", "slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 13;

		static final int slotArity = 31;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map13To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map13To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 13;

		static final int slotArity = 32;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map13To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map13To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 13;

		static final int slotArity = 33;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map13To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map13To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 13;

		static final int slotArity = 34;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map13To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map13To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 13;

		static final int slotArity = 35;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map13To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map13To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 13;

		static final int slotArity = 36;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map13To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map13To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 13;

		static final int slotArity = 37;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map13To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map13To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 13;

		static final int slotArity = 38;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map13To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map13To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 13;

		static final int slotArity = 39;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map13To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map13To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 13;

		static final int slotArity = 40;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map13To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map13To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 13;

		static final int slotArity = 41;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map13To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map13To16Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To16Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15" });

		static final int nodeArity = 16;

		static final int payloadArity = 13;

		static final int slotArity = 42;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private Map13To16Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
		}

	}

	private static class Map13To17Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To17Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16" });

		static final int nodeArity = 17;

		static final int payloadArity = 13;

		static final int slotArity = 43;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private Map13To17Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
		}

	}

	private static class Map13To18Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To18Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17" });

		static final int nodeArity = 18;

		static final int payloadArity = 13;

		static final int slotArity = 44;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private Map13To18Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
		}

	}

	private static class Map13To19Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map13To19Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15", "slot16", "slot17",
										"slot18" });

		static final int nodeArity = 19;

		static final int payloadArity = 13;

		static final int slotArity = 45;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private final Object slot18;

		private Map13To19Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17,
						final Object slot18) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
			this.slot18 = slot18;
		}

	}

	private static class Map14To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14" });

		static final int nodeArity = 0;

		static final int payloadArity = 14;

		static final int slotArity = 28;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private Map14To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
		}

	}

	private static class Map14To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 14;

		static final int slotArity = 29;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private Map14To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
		}

	}

	private static class Map14To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 14;

		static final int slotArity = 30;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private final Object slot1;

		private Map14To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map14To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 14;

		static final int slotArity = 31;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map14To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0, final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map14To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0", "slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 14;

		static final int slotArity = 32;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map14To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map14To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0", "slot1", "slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 14;

		static final int slotArity = 33;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map14To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map14To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 14;

		static final int slotArity = 34;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map14To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map14To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 14;

		static final int slotArity = 35;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map14To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map14To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 14;

		static final int slotArity = 36;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map14To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map14To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 14;

		static final int slotArity = 37;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map14To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map14To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 14;

		static final int slotArity = 38;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map14To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map14To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 14;

		static final int slotArity = 39;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map14To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map14To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 14;

		static final int slotArity = 40;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map14To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map14To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 14;

		static final int slotArity = 41;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map14To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map14To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 14;

		static final int slotArity = 42;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map14To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map14To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 14;

		static final int slotArity = 43;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map14To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map14To16Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To16Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15" });

		static final int nodeArity = 16;

		static final int payloadArity = 14;

		static final int slotArity = 44;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private Map14To16Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
		}

	}

	private static class Map14To17Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To17Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15",
										"slot16" });

		static final int nodeArity = 17;

		static final int payloadArity = 14;

		static final int slotArity = 45;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private Map14To17Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
		}

	}

	private static class Map14To18Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map14To18Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14", "slot15", "slot16",
										"slot17" });

		static final int nodeArity = 18;

		static final int payloadArity = 14;

		static final int slotArity = 46;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private final Object slot17;

		private Map14To18Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15, final Object slot16, final Object slot17) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
			this.slot17 = slot17;
		}

	}

	private static class Map15To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15" });

		static final int nodeArity = 0;

		static final int payloadArity = 15;

		static final int slotArity = 30;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private Map15To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
		}

	}

	private static class Map15To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 15;

		static final int slotArity = 31;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final Object slot0;

		private Map15To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.slot0 = slot0;
		}

	}

	private static class Map15To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 15;

		static final int slotArity = 32;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final Object slot0;

		private final Object slot1;

		private Map15To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final Object slot0,
						final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map15To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 15;

		static final int slotArity = 33;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map15To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final Object slot0,
						final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map15To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "slot0", "slot1", "slot2",
										"slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 15;

		static final int slotArity = 34;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map15To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map15To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "slot0", "slot1", "slot2",
										"slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 15;

		static final int slotArity = 35;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map15To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map15To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 15;

		static final int slotArity = 36;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map15To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map15To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 15;

		static final int slotArity = 37;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map15To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map15To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 15;

		static final int slotArity = 38;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map15To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map15To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 15;

		static final int slotArity = 39;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map15To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map15To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 15;

		static final int slotArity = 40;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map15To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map15To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 15;

		static final int slotArity = 41;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map15To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map15To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 15;

		static final int slotArity = 42;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map15To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map15To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 15;

		static final int slotArity = 43;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map15To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map15To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 15;

		static final int slotArity = 44;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map15To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map15To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13",
										"slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 15;

		static final int slotArity = 45;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map15To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map15To16Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To16Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15" });

		static final int nodeArity = 16;

		static final int payloadArity = 15;

		static final int slotArity = 46;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private Map15To16Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
		}

	}

	private static class Map15To17Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map15To17Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13", "slot14",
										"slot15", "slot16" });

		static final int nodeArity = 17;

		static final int payloadArity = 15;

		static final int slotArity = 47;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private final Object slot16;

		private Map15To17Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11, final Object slot12,
						final Object slot13, final Object slot14, final Object slot15,
						final Object slot16) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
			this.slot16 = slot16;
		}

	}

	private static class Map16To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map16To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16" });

		static final int nodeArity = 0;

		static final int payloadArity = 16;

		static final int slotArity = 32;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private Map16To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
		}

	}

	private static class Map16To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map16To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 16;

		static final int slotArity = 33;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final Object slot0;

		private Map16To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.slot0 = slot0;
		}

	}

	private static class Map16To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map16To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "slot0",
										"slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 16;

		static final int slotArity = 34;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final Object slot0;

		private final Object slot1;

		private Map16To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map16To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map16To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "slot0",
										"slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 16;

		static final int slotArity = 35;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map16To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final Object slot0, final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map16To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map16To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "slot0",
										"slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 16;

		static final int slotArity = 36;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map16To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map16To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map16To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "slot0",
										"slot1", "slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 16;

		static final int slotArity = 37;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map16To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map16To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map16To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 16;

		static final int slotArity = 38;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map16To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map16To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map16To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 16;

		static final int slotArity = 39;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map16To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map16To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map16To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 16;

		static final int slotArity = 40;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map16To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map16To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map16To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 16;

		static final int slotArity = 41;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map16To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map16To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map16To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 16;

		static final int slotArity = 42;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map16To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map16To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map16To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 16;

		static final int slotArity = 43;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map16To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map16To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map16To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 16;

		static final int slotArity = 44;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map16To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map16To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map16To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 16;

		static final int slotArity = 45;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map16To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map16To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map16To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 16;

		static final int slotArity = 46;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map16To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map16To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map16To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 16;

		static final int slotArity = 47;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map16To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map16To16Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map16To16Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12",
										"slot13", "slot14", "slot15" });

		static final int nodeArity = 16;

		static final int payloadArity = 16;

		static final int slotArity = 48;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private final Object slot15;

		private Map16To16Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13, final Object slot14,
						final Object slot15) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
			this.slot15 = slot15;
		}

	}

	private static class Map17To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map17To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17" });

		static final int nodeArity = 0;

		static final int payloadArity = 17;

		static final int slotArity = 34;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private Map17To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
		}

	}

	private static class Map17To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map17To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 17;

		static final int slotArity = 35;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final Object slot0;

		private Map17To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.slot0 = slot0;
		}

	}

	private static class Map17To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map17To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 17;

		static final int slotArity = 36;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final Object slot0;

		private final Object slot1;

		private Map17To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map17To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map17To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 17;

		static final int slotArity = 37;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map17To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final Object slot0, final Object slot1,
						final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map17To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map17To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "slot0", "slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 17;

		static final int slotArity = 38;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map17To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map17To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map17To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "slot0", "slot1", "slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 17;

		static final int slotArity = 39;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map17To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map17To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map17To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 17;

		static final int slotArity = 40;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map17To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map17To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map17To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 17;

		static final int slotArity = 41;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map17To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map17To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map17To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 17;

		static final int slotArity = 42;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map17To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map17To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map17To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 17;

		static final int slotArity = 43;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map17To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map17To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map17To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 17;

		static final int slotArity = 44;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map17To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map17To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map17To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 17;

		static final int slotArity = 45;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map17To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map17To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map17To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 17;

		static final int slotArity = 46;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map17To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map17To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map17To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 17;

		static final int slotArity = 47;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map17To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map17To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map17To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 17;

		static final int slotArity = 48;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map17To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map17To15Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map17To15Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11", "slot12", "slot13", "slot14" });

		static final int nodeArity = 15;

		static final int payloadArity = 17;

		static final int slotArity = 49;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private final Object slot14;

		private Map17To15Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9, final Object slot10,
						final Object slot11, final Object slot12, final Object slot13,
						final Object slot14) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
			this.slot14 = slot14;
		}

	}

	private static class Map18To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map18To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18" });

		static final int nodeArity = 0;

		static final int payloadArity = 18;

		static final int slotArity = 36;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private Map18To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
		}

	}

	private static class Map18To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map18To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 18;

		static final int slotArity = 37;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final Object slot0;

		private Map18To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18,
						final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.slot0 = slot0;
		}

	}

	private static class Map18To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map18To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 18;

		static final int slotArity = 38;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final Object slot0;

		private final Object slot1;

		private Map18To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18,
						final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map18To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map18To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 18;

		static final int slotArity = 39;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map18To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18,
						final Object slot0, final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map18To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map18To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "slot0", "slot1", "slot2",
										"slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 18;

		static final int slotArity = 40;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map18To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map18To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map18To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "slot0", "slot1", "slot2",
										"slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 18;

		static final int slotArity = 41;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map18To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map18To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map18To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 18;

		static final int slotArity = 42;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map18To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map18To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map18To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 18;

		static final int slotArity = 43;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map18To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map18To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map18To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 18;

		static final int slotArity = 44;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map18To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map18To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map18To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 18;

		static final int slotArity = 45;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map18To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map18To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map18To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 18;

		static final int slotArity = 46;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map18To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map18To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map18To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 18;

		static final int slotArity = 47;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map18To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map18To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map18To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 18;

		static final int slotArity = 48;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map18To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map18To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map18To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 18;

		static final int slotArity = 49;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map18To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map18To14Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map18To14Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10", "slot11", "slot12", "slot13" });

		static final int nodeArity = 14;

		static final int payloadArity = 18;

		static final int slotArity = 50;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private final Object slot13;

		private Map18To14Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12, final Object slot13) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
			this.slot13 = slot13;
		}

	}

	private static class Map19To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map19To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19" });

		static final int nodeArity = 0;

		static final int payloadArity = 19;

		static final int slotArity = 38;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private Map19To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
		}

	}

	private static class Map19To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map19To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 19;

		static final int slotArity = 39;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final Object slot0;

		private Map19To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.slot0 = slot0;
		}

	}

	private static class Map19To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map19To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "slot0",
										"slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 19;

		static final int slotArity = 40;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final Object slot0;

		private final Object slot1;

		private Map19To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map19To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map19To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "slot0",
										"slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 19;

		static final int slotArity = 41;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map19To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final Object slot0, final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map19To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map19To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "slot0",
										"slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 19;

		static final int slotArity = 42;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map19To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map19To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map19To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "slot0",
										"slot1", "slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 19;

		static final int slotArity = 43;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map19To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map19To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map19To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 19;

		static final int slotArity = 44;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map19To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map19To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map19To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 19;

		static final int slotArity = 45;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map19To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map19To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map19To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 19;

		static final int slotArity = 46;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map19To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map19To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map19To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 19;

		static final int slotArity = 47;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map19To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map19To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map19To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 19;

		static final int slotArity = 48;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map19To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map19To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map19To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 19;

		static final int slotArity = 49;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map19To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map19To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map19To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 19;

		static final int slotArity = 50;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map19To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map19To13Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map19To13Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9", "slot10", "slot11", "slot12" });

		static final int nodeArity = 13;

		static final int payloadArity = 19;

		static final int slotArity = 51;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private final Object slot12;

		private Map19To13Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10, final Object slot11,
						final Object slot12) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
			this.slot12 = slot12;
		}

	}

	private static class Map20To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map20To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20" });

		static final int nodeArity = 0;

		static final int payloadArity = 20;

		static final int slotArity = 40;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private Map20To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
		}

	}

	private static class Map20To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map20To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 20;

		static final int slotArity = 41;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final Object slot0;

		private Map20To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.slot0 = slot0;
		}

	}

	private static class Map20To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map20To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 20;

		static final int slotArity = 42;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final Object slot0;

		private final Object slot1;

		private Map20To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final Object slot0,
						final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map20To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map20To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 20;

		static final int slotArity = 43;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map20To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final Object slot0,
						final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map20To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map20To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "slot0", "slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 20;

		static final int slotArity = 44;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map20To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map20To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map20To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "slot0", "slot1", "slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 20;

		static final int slotArity = 45;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map20To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map20To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map20To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 20;

		static final int slotArity = 46;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map20To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map20To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map20To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 20;

		static final int slotArity = 47;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map20To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map20To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map20To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 20;

		static final int slotArity = 48;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map20To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map20To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map20To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 20;

		static final int slotArity = 49;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map20To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map20To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map20To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 20;

		static final int slotArity = 50;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map20To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map20To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map20To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 20;

		static final int slotArity = 51;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map20To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map20To12Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map20To12Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8", "slot9", "slot10",
										"slot11" });

		static final int nodeArity = 12;

		static final int payloadArity = 20;

		static final int slotArity = 52;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private final Object slot11;

		private Map20To12Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6,
						final Object slot7, final Object slot8, final Object slot9,
						final Object slot10, final Object slot11) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
			this.slot11 = slot11;
		}

	}

	private static class Map21To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map21To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21" });

		static final int nodeArity = 0;

		static final int payloadArity = 21;

		static final int slotArity = 42;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private Map21To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
		}

	}

	private static class Map21To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map21To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 21;

		static final int slotArity = 43;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final Object slot0;

		private Map21To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.slot0 = slot0;
		}

	}

	private static class Map21To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map21To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 21;

		static final int slotArity = 44;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final Object slot0;

		private final Object slot1;

		private Map21To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map21To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map21To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 21;

		static final int slotArity = 45;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map21To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final Object slot0, final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map21To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map21To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "slot0", "slot1", "slot2",
										"slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 21;

		static final int slotArity = 46;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map21To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map21To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map21To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "slot0", "slot1", "slot2",
										"slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 21;

		static final int slotArity = 47;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map21To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map21To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map21To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 21;

		static final int slotArity = 48;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map21To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map21To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map21To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 21;

		static final int slotArity = 49;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map21To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map21To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map21To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 21;

		static final int slotArity = 50;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map21To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map21To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map21To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 21;

		static final int slotArity = 51;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map21To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map21To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map21To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 21;

		static final int slotArity = 52;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map21To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map21To11Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map21To11Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7", "slot8",
										"slot9", "slot10" });

		static final int nodeArity = 11;

		static final int payloadArity = 21;

		static final int slotArity = 53;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private final Object slot10;

		private Map21To11Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8,
						final Object slot9, final Object slot10) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
			this.slot10 = slot10;
		}

	}

	private static class Map22To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map22To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22" });

		static final int nodeArity = 0;

		static final int payloadArity = 22;

		static final int slotArity = 44;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private Map22To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
		}

	}

	private static class Map22To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map22To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 22;

		static final int slotArity = 45;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final Object slot0;

		private Map22To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.slot0 = slot0;
		}

	}

	private static class Map22To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map22To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "slot0",
										"slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 22;

		static final int slotArity = 46;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final Object slot0;

		private final Object slot1;

		private Map22To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map22To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map22To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "slot0",
										"slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 22;

		static final int slotArity = 47;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map22To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final Object slot0, final Object slot1,
						final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map22To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map22To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "slot0",
										"slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 22;

		static final int slotArity = 48;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map22To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map22To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map22To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "slot0",
										"slot1", "slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 22;

		static final int slotArity = 49;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map22To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map22To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map22To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 22;

		static final int slotArity = 50;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map22To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map22To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map22To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 22;

		static final int slotArity = 51;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map22To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map22To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map22To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 22;

		static final int slotArity = 52;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map22To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map22To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map22To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 22;

		static final int slotArity = 53;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map22To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map22To10Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map22To10Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6",
										"slot7", "slot8", "slot9" });

		static final int nodeArity = 10;

		static final int payloadArity = 22;

		static final int slotArity = 54;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private final Object slot9;

		private Map22To10Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4,
						final Object slot5, final Object slot6, final Object slot7,
						final Object slot8, final Object slot9) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
			this.slot9 = slot9;
		}

	}

	private static class Map23To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map23To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23" });

		static final int nodeArity = 0;

		static final int payloadArity = 23;

		static final int slotArity = 46;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private Map23To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
		}

	}

	private static class Map23To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map23To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 23;

		static final int slotArity = 47;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final Object slot0;

		private Map23To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23,
						final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.slot0 = slot0;
		}

	}

	private static class Map23To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map23To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 23;

		static final int slotArity = 48;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final Object slot0;

		private final Object slot1;

		private Map23To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23,
						final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map23To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map23To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 23;

		static final int slotArity = 49;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map23To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23,
						final Object slot0, final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map23To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map23To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "slot0", "slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 23;

		static final int slotArity = 50;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map23To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map23To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map23To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "slot0", "slot1", "slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 23;

		static final int slotArity = 51;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map23To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map23To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map23To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 23;

		static final int slotArity = 52;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map23To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map23To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map23To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 23;

		static final int slotArity = 53;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map23To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map23To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map23To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 23;

		static final int slotArity = 54;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map23To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map23To9Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map23To9Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5", "slot6", "slot7", "slot8" });

		static final int nodeArity = 9;

		static final int payloadArity = 23;

		static final int slotArity = 55;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private final Object slot8;

		private Map23To9Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7, final Object slot8) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
			this.slot8 = slot8;
		}

	}

	private static class Map24To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map24To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24" });

		static final int nodeArity = 0;

		static final int payloadArity = 24;

		static final int slotArity = 48;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private Map24To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
		}

	}

	private static class Map24To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map24To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 24;

		static final int slotArity = 49;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final Object slot0;

		private Map24To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.slot0 = slot0;
		}

	}

	private static class Map24To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map24To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 24;

		static final int slotArity = 50;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final Object slot0;

		private final Object slot1;

		private Map24To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map24To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map24To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 24;

		static final int slotArity = 51;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map24To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final Object slot0, final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map24To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map24To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "slot0", "slot1", "slot2",
										"slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 24;

		static final int slotArity = 52;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map24To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map24To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map24To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "slot0", "slot1", "slot2",
										"slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 24;

		static final int slotArity = 53;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map24To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map24To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map24To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 24;

		static final int slotArity = 54;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map24To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map24To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map24To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 24;

		static final int slotArity = 55;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map24To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map24To8Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map24To8Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "slot0", "slot1", "slot2",
										"slot3", "slot4", "slot5", "slot6", "slot7" });

		static final int nodeArity = 8;

		static final int payloadArity = 24;

		static final int slotArity = 56;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private final Object slot7;

		private Map24To8Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5,
						final Object slot6, final Object slot7) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
			this.slot7 = slot7;
		}

	}

	private static class Map25To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map25To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25" });

		static final int nodeArity = 0;

		static final int payloadArity = 25;

		static final int slotArity = 50;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private Map25To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
		}

	}

	private static class Map25To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map25To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 25;

		static final int slotArity = 51;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final Object slot0;

		private Map25To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.slot0 = slot0;
		}

	}

	private static class Map25To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map25To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "slot0",
										"slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 25;

		static final int slotArity = 52;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final Object slot0;

		private final Object slot1;

		private Map25To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final Object slot0,
						final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map25To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map25To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "slot0",
										"slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 25;

		static final int slotArity = 53;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map25To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final Object slot0,
						final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map25To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map25To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "slot0",
										"slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 25;

		static final int slotArity = 54;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map25To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map25To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map25To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "slot0",
										"slot1", "slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 25;

		static final int slotArity = 55;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map25To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map25To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map25To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 25;

		static final int slotArity = 56;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map25To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map25To7Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map25To7Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "slot0",
										"slot1", "slot2", "slot3", "slot4", "slot5", "slot6" });

		static final int nodeArity = 7;

		static final int payloadArity = 25;

		static final int slotArity = 57;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private final Object slot6;

		private Map25To7Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final Object slot0,
						final Object slot1, final Object slot2, final Object slot3,
						final Object slot4, final Object slot5, final Object slot6) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
			this.slot6 = slot6;
		}

	}

	private static class Map26To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map26To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26" });

		static final int nodeArity = 0;

		static final int payloadArity = 26;

		static final int slotArity = 52;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private Map26To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
		}

	}

	private static class Map26To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map26To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 26;

		static final int slotArity = 53;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final Object slot0;

		private Map26To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.slot0 = slot0;
		}

	}

	private static class Map26To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map26To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 26;

		static final int slotArity = 54;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final Object slot0;

		private final Object slot1;

		private Map26To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map26To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map26To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 26;

		static final int slotArity = 55;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map26To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final Object slot0, final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map26To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map26To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "slot0", "slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 26;

		static final int slotArity = 56;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map26To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map26To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map26To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "slot0", "slot1", "slot2", "slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 26;

		static final int slotArity = 57;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map26To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map26To6Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map26To6Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "slot0", "slot1", "slot2", "slot3", "slot4",
										"slot5" });

		static final int nodeArity = 6;

		static final int payloadArity = 26;

		static final int slotArity = 58;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private final Object slot5;

		private Map26To6Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3, final Object slot4, final Object slot5) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
			this.slot5 = slot5;
		}

	}

	private static class Map27To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map27To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27" });

		static final int nodeArity = 0;

		static final int payloadArity = 27;

		static final int slotArity = 54;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private Map27To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
		}

	}

	private static class Map27To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map27To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 27;

		static final int slotArity = 55;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final Object slot0;

		private Map27To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.slot0 = slot0;
		}

	}

	private static class Map27To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map27To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 27;

		static final int slotArity = 56;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final Object slot0;

		private final Object slot1;

		private Map27To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map27To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map27To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 27;

		static final int slotArity = 57;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map27To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final Object slot0, final Object slot1,
						final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map27To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map27To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "slot0", "slot1", "slot2",
										"slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 27;

		static final int slotArity = 58;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map27To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map27To5Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map27To5Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "slot0", "slot1", "slot2",
										"slot3", "slot4" });

		static final int nodeArity = 5;

		static final int payloadArity = 27;

		static final int slotArity = 59;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private final Object slot4;

		private Map27To5Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final Object slot0, final Object slot1,
						final Object slot2, final Object slot3, final Object slot4) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
			this.slot4 = slot4;
		}

	}

	private static class Map28To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map28To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "key28", "val28" });

		static final int nodeArity = 0;

		static final int payloadArity = 28;

		static final int slotArity = 56;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final K key28;

		private final V val28;

		private Map28To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final K key28, final V val28) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.key28 = key28;
			this.val28 = val28;
		}

	}

	private static class Map28To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map28To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "key28", "val28", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 28;

		static final int slotArity = 57;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final K key28;

		private final V val28;

		private final Object slot0;

		private Map28To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final K key28, final V val28,
						final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.key28 = key28;
			this.val28 = val28;
			this.slot0 = slot0;
		}

	}

	private static class Map28To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map28To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "key28", "val28", "slot0",
										"slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 28;

		static final int slotArity = 58;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final K key28;

		private final V val28;

		private final Object slot0;

		private final Object slot1;

		private Map28To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final K key28, final V val28,
						final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.key28 = key28;
			this.val28 = val28;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map28To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map28To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "key28", "val28", "slot0",
										"slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 28;

		static final int slotArity = 59;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final K key28;

		private final V val28;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map28To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final K key28, final V val28,
						final Object slot0, final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.key28 = key28;
			this.val28 = val28;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map28To4Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map28To4Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "key28", "val28", "slot0",
										"slot1", "slot2", "slot3" });

		static final int nodeArity = 4;

		static final int payloadArity = 28;

		static final int slotArity = 60;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final K key28;

		private final V val28;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private final Object slot3;

		private Map28To4Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final K key28, final V val28,
						final Object slot0, final Object slot1, final Object slot2,
						final Object slot3) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.key28 = key28;
			this.val28 = val28;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
			this.slot3 = slot3;
		}

	}

	private static class Map29To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map29To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "key28", "val28", "key29",
										"val29" });

		static final int nodeArity = 0;

		static final int payloadArity = 29;

		static final int slotArity = 58;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final K key28;

		private final V val28;

		private final K key29;

		private final V val29;

		private Map29To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final K key28, final V val28, final K key29,
						final V val29) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.key28 = key28;
			this.val28 = val28;
			this.key29 = key29;
			this.val29 = val29;
		}

	}

	private static class Map29To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map29To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "key28", "val28", "key29",
										"val29", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 29;

		static final int slotArity = 59;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final K key28;

		private final V val28;

		private final K key29;

		private final V val29;

		private final Object slot0;

		private Map29To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final K key28, final V val28, final K key29,
						final V val29, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.key28 = key28;
			this.val28 = val28;
			this.key29 = key29;
			this.val29 = val29;
			this.slot0 = slot0;
		}

	}

	private static class Map29To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map29To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "key28", "val28", "key29",
										"val29", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 29;

		static final int slotArity = 60;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final K key28;

		private final V val28;

		private final K key29;

		private final V val29;

		private final Object slot0;

		private final Object slot1;

		private Map29To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final K key28, final V val28, final K key29,
						final V val29, final Object slot0, final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.key28 = key28;
			this.val28 = val28;
			this.key29 = key29;
			this.val29 = val29;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map29To3Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map29To3Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "key28", "val28", "key29",
										"val29", "slot0", "slot1", "slot2" });

		static final int nodeArity = 3;

		static final int payloadArity = 29;

		static final int slotArity = 61;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final K key28;

		private final V val28;

		private final K key29;

		private final V val29;

		private final Object slot0;

		private final Object slot1;

		private final Object slot2;

		private Map29To3Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final K key28, final V val28, final K key29,
						final V val29, final Object slot0, final Object slot1, final Object slot2) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.key28 = key28;
			this.val28 = val28;
			this.key29 = key29;
			this.val29 = val29;
			this.slot0 = slot0;
			this.slot1 = slot1;
			this.slot2 = slot2;
		}

	}

	private static class Map30To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map30To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "key28", "val28", "key29",
										"val29", "key30", "val30" });

		static final int nodeArity = 0;

		static final int payloadArity = 30;

		static final int slotArity = 60;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final K key28;

		private final V val28;

		private final K key29;

		private final V val29;

		private final K key30;

		private final V val30;

		private Map30To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final K key28, final V val28, final K key29,
						final V val29, final K key30, final V val30) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.key28 = key28;
			this.val28 = val28;
			this.key29 = key29;
			this.val29 = val29;
			this.key30 = key30;
			this.val30 = val30;
		}

	}

	private static class Map30To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map30To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "key28", "val28", "key29",
										"val29", "key30", "val30", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 30;

		static final int slotArity = 61;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final K key28;

		private final V val28;

		private final K key29;

		private final V val29;

		private final K key30;

		private final V val30;

		private final Object slot0;

		private Map30To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final K key28, final V val28, final K key29,
						final V val29, final K key30, final V val30, final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.key28 = key28;
			this.val28 = val28;
			this.key29 = key29;
			this.val29 = val29;
			this.key30 = key30;
			this.val30 = val30;
			this.slot0 = slot0;
		}

	}

	private static class Map30To2Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map30To2Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "key28", "val28", "key29",
										"val29", "key30", "val30", "slot0", "slot1" });

		static final int nodeArity = 2;

		static final int payloadArity = 30;

		static final int slotArity = 62;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final K key28;

		private final V val28;

		private final K key29;

		private final V val29;

		private final K key30;

		private final V val30;

		private final Object slot0;

		private final Object slot1;

		private Map30To2Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final K key28, final V val28, final K key29,
						final V val29, final K key30, final V val30, final Object slot0,
						final Object slot1) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.key28 = key28;
			this.val28 = val28;
			this.key29 = key29;
			this.val29 = val29;
			this.key30 = key30;
			this.val30 = val30;
			this.slot0 = slot0;
			this.slot1 = slot1;
		}

	}

	private static class Map31To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map31To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "key28", "val28", "key29",
										"val29", "key30", "val30", "key31", "val31" });

		static final int nodeArity = 0;

		static final int payloadArity = 31;

		static final int slotArity = 62;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final K key28;

		private final V val28;

		private final K key29;

		private final V val29;

		private final K key30;

		private final V val30;

		private final K key31;

		private final V val31;

		private Map31To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final K key28, final V val28, final K key29,
						final V val29, final K key30, final V val30, final K key31, final V val31) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.key28 = key28;
			this.val28 = val28;
			this.key29 = key29;
			this.val29 = val29;
			this.key30 = key30;
			this.val30 = val30;
			this.key31 = key31;
			this.val31 = val31;
		}

	}

	private static class Map31To1Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map31To1Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "key28", "val28", "key29",
										"val29", "key30", "val30", "key31", "val31", "slot0" });

		static final int nodeArity = 1;

		static final int payloadArity = 31;

		static final int slotArity = 63;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final K key28;

		private final V val28;

		private final K key29;

		private final V val29;

		private final K key30;

		private final V val30;

		private final K key31;

		private final V val31;

		private final Object slot0;

		private Map31To1Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final K key28, final V val28, final K key29,
						final V val29, final K key30, final V val30, final K key31, final V val31,
						final Object slot0) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.key28 = key28;
			this.val28 = val28;
			this.key29 = key29;
			this.val29 = val29;
			this.key30 = key30;
			this.val30 = val30;
			this.key31 = key31;
			this.val31 = val31;
			this.slot0 = slot0;
		}

	}

	private static class Map32To0Node_Heterogeneous_BleedingEdge<K, V>
					extends CompactMixedHeterogeneousMapNode<K, V> {

		static final long[] arrayOffsets = arrayOffsets(
						Map32To0Node_Heterogeneous_BleedingEdge.class,
						new String[] { "key1", "val1", "key2", "val2", "key3", "val3", "key4",
										"val4", "key5", "val5", "key6", "val6", "key7", "val7",
										"key8", "val8", "key9", "val9", "key10", "val10", "key11",
										"val11", "key12", "val12", "key13", "val13", "key14",
										"val14", "key15", "val15", "key16", "val16", "key17",
										"val17", "key18", "val18", "key19", "val19", "key20",
										"val20", "key21", "val21", "key22", "val22", "key23",
										"val23", "key24", "val24", "key25", "val25", "key26",
										"val26", "key27", "val27", "key28", "val28", "key29",
										"val29", "key30", "val30", "key31", "val31", "key32",
										"val32" });

		static final int nodeArity = 0;

		static final int payloadArity = 32;

		static final int slotArity = 64;

		private final K key1;

		private final V val1;

		private final K key2;

		private final V val2;

		private final K key3;

		private final V val3;

		private final K key4;

		private final V val4;

		private final K key5;

		private final V val5;

		private final K key6;

		private final V val6;

		private final K key7;

		private final V val7;

		private final K key8;

		private final V val8;

		private final K key9;

		private final V val9;

		private final K key10;

		private final V val10;

		private final K key11;

		private final V val11;

		private final K key12;

		private final V val12;

		private final K key13;

		private final V val13;

		private final K key14;

		private final V val14;

		private final K key15;

		private final V val15;

		private final K key16;

		private final V val16;

		private final K key17;

		private final V val17;

		private final K key18;

		private final V val18;

		private final K key19;

		private final V val19;

		private final K key20;

		private final V val20;

		private final K key21;

		private final V val21;

		private final K key22;

		private final V val22;

		private final K key23;

		private final V val23;

		private final K key24;

		private final V val24;

		private final K key25;

		private final V val25;

		private final K key26;

		private final V val26;

		private final K key27;

		private final V val27;

		private final K key28;

		private final V val28;

		private final K key29;

		private final V val29;

		private final K key30;

		private final V val30;

		private final K key31;

		private final V val31;

		private final K key32;

		private final V val32;

		private Map32To0Node_Heterogeneous_BleedingEdge(final AtomicReference<Thread> mutator,
						final int nodeMap, final int dataMap, final K key1, final V val1,
						final K key2, final V val2, final K key3, final V val3, final K key4,
						final V val4, final K key5, final V val5, final K key6, final V val6,
						final K key7, final V val7, final K key8, final V val8, final K key9,
						final V val9, final K key10, final V val10, final K key11, final V val11,
						final K key12, final V val12, final K key13, final V val13, final K key14,
						final V val14, final K key15, final V val15, final K key16, final V val16,
						final K key17, final V val17, final K key18, final V val18, final K key19,
						final V val19, final K key20, final V val20, final K key21, final V val21,
						final K key22, final V val22, final K key23, final V val23, final K key24,
						final V val24, final K key25, final V val25, final K key26, final V val26,
						final K key27, final V val27, final K key28, final V val28, final K key29,
						final V val29, final K key30, final V val30, final K key31, final V val31,
						final K key32, final V val32) {
			super(mutator, nodeMap, dataMap);
			this.key1 = key1;
			this.val1 = val1;
			this.key2 = key2;
			this.val2 = val2;
			this.key3 = key3;
			this.val3 = val3;
			this.key4 = key4;
			this.val4 = val4;
			this.key5 = key5;
			this.val5 = val5;
			this.key6 = key6;
			this.val6 = val6;
			this.key7 = key7;
			this.val7 = val7;
			this.key8 = key8;
			this.val8 = val8;
			this.key9 = key9;
			this.val9 = val9;
			this.key10 = key10;
			this.val10 = val10;
			this.key11 = key11;
			this.val11 = val11;
			this.key12 = key12;
			this.val12 = val12;
			this.key13 = key13;
			this.val13 = val13;
			this.key14 = key14;
			this.val14 = val14;
			this.key15 = key15;
			this.val15 = val15;
			this.key16 = key16;
			this.val16 = val16;
			this.key17 = key17;
			this.val17 = val17;
			this.key18 = key18;
			this.val18 = val18;
			this.key19 = key19;
			this.val19 = val19;
			this.key20 = key20;
			this.val20 = val20;
			this.key21 = key21;
			this.val21 = val21;
			this.key22 = key22;
			this.val22 = val22;
			this.key23 = key23;
			this.val23 = val23;
			this.key24 = key24;
			this.val24 = val24;
			this.key25 = key25;
			this.val25 = val25;
			this.key26 = key26;
			this.val26 = val26;
			this.key27 = key27;
			this.val27 = val27;
			this.key28 = key28;
			this.val28 = val28;
			this.key29 = key29;
			this.val29 = val29;
			this.key30 = key30;
			this.val30 = val30;
			this.key31 = key31;
			this.val31 = val31;
			this.key32 = key32;
			this.val32 = val32;
		}

	}

}